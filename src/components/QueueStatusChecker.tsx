import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Label } from '@/components/ui/label';
import { QueueItem, QueueDisplay } from '@/types';
import { getQueuePosition, getQueueDisplay, searchQueueByGameInfo } from '@/lib/queueApi';
import { testSimpleSearch } from '@/lib/testSearch';
import { Search, Clock, CheckCircle, XCircle, AlertCircle, Users, Play, MessageSquare, X, MessageCircle, Settings, Menu } from 'lucide-react';
import { Link } from 'react-router-dom';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter } from '@/components/ui/dialog';

export default function QueueStatusChecker() {
  const [queueNumber, setQueueNumber] = useState('');
  const [queueItem, setQueueItem] = useState<QueueItem | null>(null);
  const [queuePosition, setQueuePosition] = useState<number>(0);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [queueDisplay, setQueueDisplay] = useState<QueueDisplay | null>(null);
  const [searchTerm, setSearchTerm] = useState('');
  const [showLineQRPopup, setShowLineQRPopup] = useState(false);
  const [searchResults, setSearchResults] = useState<QueueItem[]>([]);
  const [updatingStatus, setUpdatingStatus] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
  const [showUpdateCredentialsForm, setShowUpdateCredentialsForm] = useState(false);
  const [newUsername, setNewUsername] = useState('');
  const [newPassword, setNewPassword] = useState('');
  
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  const [showUploadForm, setShowUploadForm] = useState(false);
  const [uploadedImage, setUploadedImage] = useState<File | null>(null);
  const [imagePreview, setImagePreview] = useState<string | null>(null);
  const [uploading, setUploading] = useState(false);

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏¥‡∏ß
  const loadQueueDisplay = async () => {
    try {
      const data = await getQueueDisplay();
      setQueueDisplay(data);
    } catch (error) {
      console.error('Error loading queue display:', error);
    }
  };

  useEffect(() => {
    loadQueueDisplay();
    const interval = setInterval(loadQueueDisplay, 10000);
    return () => clearInterval(interval);
  }, []);

  const handleCheckStatus = async () => {
    if (!queueNumber.trim()) {
      setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤');
      return;
    }

    setLoading(true);
    setError('');
    setQueueItem(null);
    setSearchResults([]);

    try {
      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß - ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢
      const results = await searchQueueByGameInfo(queueNumber);
      
      if (results.length > 0) {
        setSearchResults(results);
        // ‡∏ñ‡πâ‡∏≤‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        if (results.length === 1) {
          setQueueItem(results[0]);
          if (results[0].status === 'waiting') {
            const position = await getQueuePosition(results[0].queue_number);
            setQueuePosition(position);
          } else {
            setQueuePosition(0);
          }
        }
      } else {
        setError(`‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö "${queueNumber}" ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á`);
      }
    } catch (err) {
      console.error('Error checking queue status:', err);
      setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    } finally {
      setLoading(false);
    }
  };

  const getStatusInfo = (status: string) => {
    switch (status) {
      case 'waiting': return { icon: <Clock className="w-5 h-5" />, color: 'bg-yellow-500', text: '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£', description: '‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å' };
      case 'processing': return { icon: <AlertCircle className="w-5 h-5" />, color: 'bg-blue-500', text: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£', description: '‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà' };
      case 'completed': return { icon: <CheckCircle className="w-5 h-5" />, color: 'bg-green-500', text: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', description: '‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß' };
      case 'cancelled': return { icon: <XCircle className="w-5 h-5" />, color: 'bg-red-500', text: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å', description: '‡∏Ñ‡∏¥‡∏ß‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß' };
      case 'problem': return { icon: <AlertCircle className="w-5 h-5" />, color: 'bg-orange-500', text: '‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤', description: '‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô' };
      case 'customer_fixed': return { icon: <CheckCircle className="w-5 h-5" />, color: 'bg-emerald-500', text: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß', description: '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠' };
      case 'pending': return { icon: <Clock className="w-5 h-5" />, color: 'bg-yellow-500', text: '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£', description: '‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å' };
      default: return { icon: <Clock className="w-5 h-5" />, color: 'bg-yellow-500', text: '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£', description: '‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å' };
    }
  };

  const getProductTypeInfo = (type: string) => {
    switch (type) {
      case 'robux': return { icon: 'üéÆ', name: 'Robux' };
      case 'chicken': return { icon: 'üêî', name: 'Chicken Account' };
      case 'rainbow': return { icon: 'üåà', name: 'Rainbow Six' };
      default: return { icon: 'üì¶', name: '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤' };
    }
  };

  const handleCustomerFixedProblem = async () => {
    if (!queueItem) return;

    setUpdatingStatus(true);
    try {
      // Import supabase
      const { supabase } = await import('@/lib/supabase');
      
      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô customer_fixed ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
      const updatedNotes = queueItem.admin_notes ? 
        `${queueItem.admin_notes} | ‚úÖ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß` :
        '‚úÖ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß';

      const { error } = await supabase
        .from('queue_items')
        .update({
          status: 'customer_fixed',
          admin_notes: updatedNotes
        })
        .eq('id', queueItem.id);

      if (error) {
        throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏î‡πâ');
      }

      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô state
      setQueueItem(prev => prev ? {
        ...prev,
        status: 'customer_fixed',
        admin_notes: updatedNotes
      } : null);

      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      alert('‚úÖ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
      
      // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
      loadQueueDisplay();
      
    } catch (error) {
      console.error('Error updating queue status:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    } finally {
      setUpdatingStatus(false);
    }
  };

  const handleImageUpload = async () => {
    if (!queueItem || !imagePreview) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô');
      return;
    }

    setUploading(true);
    try {
      const { supabase } = await import('@/lib/supabase');
      
      console.log('üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (Base64):', {
        queueId: queueItem.id,
        imageSize: imagePreview.length
      });

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô Base64 ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
      const customerUpdateData = {
        game_history_image: imagePreview, // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Base64 string
        uploaded_at: new Date().toISOString(),
        note: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô'
      };

      const { error: dbError } = await supabase
        .from('queue_items')
        .update({
          customer_updated_credentials: customerUpdateData,
          status: 'customer_fixed'
        })
        .eq('id', queueItem.id);

      if (dbError) {
        console.error('‚ùå Database error:', dbError);
        throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ: ' + dbError.message);
      }

      console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

      alert('‚úÖ ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏ó‡∏µ‡πà "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß"\n‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏±‡∏ö');
      setShowUploadForm(false);
      setUploadedImage(null);
      setImagePreview(null);
      
      await loadQueueDisplay();
      
    } catch (error: any) {
      console.error('‚ùå Error uploading image:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + (error.message || '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'));
    } finally {
      setUploading(false);
    }
  };

  const handleImageSelect = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå (max 5MB)
      if (file.size > 5 * 1024 * 1024) {
        alert('‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà');
        return;
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå
      if (!file.type.startsWith('image/')) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
        return;
      }

      setUploadedImage(file);
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á preview
      const reader = new FileReader();
      reader.onloadend = () => {
        setImagePreview(reader.result as string);
      };
      reader.readAsDataURL(file);
    }
  };

  const handleUpdateCredentials = async () => {
    if (!queueItem || !newUsername.trim() || !newPassword.trim()) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
      return;
    }

    setUpdatingStatus(true);
    try {
      const { supabase } = await import('@/lib/supabase');
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á contact_info ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÇ‡∏î‡∏¢‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
      let updatedContactInfo = queueItem.contact_info;
      
      // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Username ‡∏ó‡∏∏‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
      if (updatedContactInfo.includes('Username:')) {
        updatedContactInfo = updatedContactInfo.replace(/Username:\s*[^|]+/gi, `Username: ${newUsername}`);
      } else if (updatedContactInfo.includes('‡∏ä‡∏∑‡πà‡∏≠:')) {
        updatedContactInfo = updatedContactInfo.replace(/‡∏ä‡∏∑‡πà‡∏≠:\s*[^|]+/gi, `‡∏ä‡∏∑‡πà‡∏≠: ${newUsername}`);
      } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤
        updatedContactInfo = `Username: ${newUsername} | ${updatedContactInfo}`;
      }
      
      // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Password ‡∏ó‡∏∏‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
      if (updatedContactInfo.includes('Password:')) {
        updatedContactInfo = updatedContactInfo.replace(/Password:\s*[^|]+/gi, `Password: ${newPassword}`);
      } else if (updatedContactInfo.includes('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô:')) {
        updatedContactInfo = updatedContactInfo.replace(/‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô:\s*[^|]+/gi, `‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô: ${newPassword}`);
      } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
        updatedContactInfo = `${updatedContactInfo} | Password: ${newPassword}`;
      }
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á JSON object ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
      const customerUpdateData = {
        username: newUsername,
        password: newPassword,
        old_username: queueItem.roblox_username || queueItem.customer_name,
        updated_at: new Date().toISOString(),
        note: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏°‡∏≤‡πÄ‡∏≠‡∏á'
      };

      console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', {
        oldUsername: queueItem.roblox_username,
        newUsername,
        queueId: queueItem.id,
        customerUpdateData,
        note: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÅ‡∏¢‡∏Å customer_updated_credentials'
      });

      const { error } = await supabase
        .from('queue_items')
        .update({
          customer_updated_credentials: customerUpdateData,
          status: 'customer_fixed' // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß"
          // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÅ‡∏¢‡∏Å
          // ‡πÑ‡∏°‡πà‡πÅ‡∏ï‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏° (contact_info, roblox_username, etc.)
        })
        .eq('id', queueItem.id);

      if (error) {
        console.error('‚ùå Supabase error:', error);
        throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ: ' + error.message);
      }

      console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏≠‡∏∞‡πÑ‡∏£ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏¢‡∏Å)
      // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á setState ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤

      alert(`‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà: ${newUsername}\n‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà: ${newPassword}\n\n‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏ó‡∏µ‡πà "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß"\n‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏±‡∏ö`);
      setShowUpdateCredentialsForm(false);
      setNewUsername('');
      setNewPassword('');
      
      // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
      await loadQueueDisplay();
      
    } catch (error: any) {
      console.error('‚ùå Error updating credentials:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ' + (error.message || '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'));
    } finally {
      setUpdatingStatus(false);
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏ô contact_info
  const hidePasswordInContactInfo = (contactInfo: string) => {
    return contactInfo
      .replace(/Password:\s*[^|]+/g, 'Password: ‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢')
      .replace(/password:\s*[^|]+/gi, 'Password: ‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢')
      .replace(/Password:\s*\.+/g, 'Password: ‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢')
      .replace(/password:\s*\.+/gi, 'Password: ‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢');
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleString('th-TH', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const formatWaitTime = (minutes: number) => {
    if (minutes < 60) return `${minutes} ‡∏ô‡∏≤‡∏ó‡∏µ`;
    const hours = Math.floor(minutes / 60);
    const remainingMinutes = minutes % 60;
    return `${hours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ${remainingMinutes} ‡∏ô‡∏≤‡∏ó‡∏µ`;
  };

  const handleSelectQueue = async (selectedQueue: QueueItem) => {
    setQueueItem(selectedQueue);
    setSearchResults([]);
    
    if (selectedQueue.status === 'waiting') {
      const position = await getQueuePosition(selectedQueue.queue_number);
      setQueuePosition(position);
    } else {
      setQueuePosition(0);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900">
      {/* Top Navigation Bar */}
      <nav className="bg-purple-800/30 backdrop-blur-xl border-b border-white/10 sticky top-0 z-50 shadow-lg">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between h-16">
            {/* Logo */}
            <Link to="/" className="flex items-center space-x-2 hover:opacity-80 transition-opacity">
              <img 
                src="https://img5.pic.in.th/file/secure-sv1/2318a16a76694dc8dccbd75362a64368deb68b00127501b51b1a9a0588ca2f42.png" 
                alt="Lemon Shop Logo" 
                className="w-10 h-10 object-contain"
              />
              <span className="text-white font-bold text-lg hidden sm:inline-block">Lemon Shop</span>
            </Link>
            
            {/* Desktop Navigation Menu */}
            <div className="hidden lg:flex items-center space-x-1 md:space-x-2">
              <Link to="/">
                <Button 
                  variant="ghost" 
                  className="text-white hover:bg-white/10 rounded-full text-sm md:text-base px-3 md:px-4"
                >
                  üè† ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
                </Button>
              </Link>
              
              <Link to="/queue-status">
                <Button 
                  variant="ghost" 
                  className="text-white hover:bg-white/10 rounded-full text-sm md:text-base px-3 md:px-4 bg-white/10"
                >
                  üîç ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏¥‡∏ß
                </Button>
              </Link>
              
              <Button 
                variant="ghost"
                onClick={() => window.open('https://www.facebook.com/LemonShopStore/', '_blank')}
                className="text-white hover:bg-white/10 rounded-full text-sm md:text-base px-3 md:px-4"
              >
                üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô
              </Button>
              
              <Button 
                variant="ghost"
                onClick={() => window.open('https://lemonshop.rdcw.xyz/', '_blank')}
                className="text-white hover:bg-white/10 rounded-full text-sm md:text-base px-3 md:px-4"
              >
                üõí ‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
              </Button>
              
              <Button 
                variant="ghost"
                onClick={() => window.open('https://youtu.be/caiYmzge0lk', '_blank')}
                className="text-white hover:bg-white/10 rounded-full text-sm md:text-base px-3 md:px-4"
              >
                üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
              </Button>
              
              <Button 
                variant="ghost"
                onClick={() => alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏≠‡∏î‡∏µ/‡∏£‡∏´‡∏±‡∏™')}
                className="text-white hover:bg-white/10 rounded-full text-sm md:text-base px-3 md:px-4"
              >
                üìù ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏≠‡∏î‡∏µ/‡∏£‡∏´‡∏±‡∏™
              </Button>
              
              <Link to="/admin">
                <Button 
                  variant="ghost" 
                  className="text-white hover:bg-white/10 rounded-full text-sm md:text-base px-2 md:px-3 ml-2 border border-white/20"
                >
                  <Settings className="w-4 h-4 md:mr-1" />
                  <span className="hidden md:inline">‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</span>
                </Button>
              </Link>
            </div>
            
            {/* Mobile Hamburger Button */}
            <button
              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
              className="lg:hidden text-white p-2 hover:bg-white/10 rounded-lg transition-colors"
              aria-label="Toggle menu"
            >
              {isMobileMenuOpen ? (
                <X className="w-6 h-6" />
              ) : (
                <Menu className="w-6 h-6" />
              )}
            </button>
          </div>
        </div>
      </nav>
      
      {/* Overlay - ‡∏ï‡πâ‡∏≠‡∏á‡∏ß‡∏≤‡∏á‡∏ô‡∏≠‡∏Å nav */}
      {isMobileMenuOpen && (
        <div
          className="lg:hidden fixed inset-0 bg-black/60 backdrop-blur-sm z-[999]"
          onClick={() => setIsMobileMenuOpen(false)}
        ></div>
      )}
      
      {/* Mobile Menu Slide-in - ‡∏ï‡πâ‡∏≠‡∏á‡∏ß‡∏≤‡∏á‡∏ô‡∏≠‡∏Å nav */}
      <div
        className={`lg:hidden fixed inset-y-0 left-0 w-80 bg-gradient-to-br from-purple-900/98 via-blue-900/98 to-indigo-900/98 backdrop-blur-xl border-r border-white/20 transform transition-transform duration-300 ease-in-out z-[1000] shadow-2xl ${
          isMobileMenuOpen ? 'translate-x-0' : '-translate-x-full'
        }`}
      >
        <div className="flex flex-col h-full">
          {/* Mobile Menu Header */}
          <div className="flex items-center justify-between p-6">
            <div className="flex items-center space-x-3">
              <img 
                src="https://img5.pic.in.th/file/secure-sv1/2318a16a76694dc8dccbd75362a64368deb68b00127501b51b1a9a0588ca2f42.png" 
                alt="Lemon Shop Logo" 
                className="w-10 h-10 object-contain"
              />
              <span className="text-white font-bold text-2xl">Lemon Shop</span>
            </div>
            <button
              onClick={() => setIsMobileMenuOpen(false)}
              className="text-white p-2 hover:bg-white/20 rounded-full transition-colors"
            >
              <X className="w-7 h-7" />
            </button>
          </div>
          
          {/* Mobile Menu Items */}
          <div className="flex-1 overflow-y-auto px-6 py-4">
            <div className="space-y-2">
              <Link to="/" onClick={() => setIsMobileMenuOpen(false)}>
                <button className="w-full text-left px-5 py-4 text-white hover:bg-white/10 rounded-xl transition-colors flex items-center space-x-4">
                  <span className="text-2xl">üè†</span>
                  <span className="text-lg font-medium">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</span>
                </button>
              </Link>
              
              <Link to="/queue-status" onClick={() => setIsMobileMenuOpen(false)}>
                <button className="w-full text-left px-5 py-4 text-white bg-white/10 rounded-xl transition-colors flex items-center space-x-4">
                  <span className="text-2xl">üîç</span>
                  <span className="text-lg font-medium">‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏¥‡∏ß</span>
                </button>
              </Link>
              
              <button
                onClick={() => {
                  window.open('https://www.facebook.com/LemonShopStore/', '_blank');
                  setIsMobileMenuOpen(false);
                }}
                className="w-full text-left px-5 py-4 text-white hover:bg-white/10 rounded-xl transition-colors flex items-center space-x-4"
              >
                <span className="text-2xl">üìû</span>
                <span className="text-lg font-medium">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô</span>
              </button>
              
              <button
                onClick={() => {
                  window.open('https://lemonshop.rdcw.xyz/', '_blank');
                  setIsMobileMenuOpen(false);
                }}
                className="w-full text-left px-5 py-4 text-white hover:bg-white/10 rounded-xl transition-colors flex items-center space-x-4"
              >
                <span className="text-2xl">üõí</span>
                <span className="text-lg font-medium">‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</span>
              </button>
              
              <button
                onClick={() => {
                  window.open('https://youtu.be/caiYmzge0lk', '_blank');
                  setIsMobileMenuOpen(false);
                }}
                className="w-full text-left px-5 py-4 text-white hover:bg-white/10 rounded-xl transition-colors flex items-center space-x-4"
              >
                <span className="text-2xl">üìñ</span>
                <span className="text-lg font-medium">‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</span>
              </button>
              
              <button
                onClick={() => {
                  alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏≠‡∏î‡∏µ/‡∏£‡∏´‡∏±‡∏™');
                  setIsMobileMenuOpen(false);
                }}
                className="w-full text-left px-5 py-4 text-white hover:bg-white/10 rounded-xl transition-colors flex items-center space-x-4"
              >
                <span className="text-2xl">üìù</span>
                <span className="text-lg font-medium">‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏≠‡∏î‡∏µ/‡∏£‡∏´‡∏±‡∏™</span>
              </button>
              
              <div className="my-4 border-t border-white/20"></div>
              
              <Link to="/admin" onClick={() => setIsMobileMenuOpen(false)}>
                <button className="w-full text-left px-5 py-4 text-white hover:bg-white/10 rounded-xl transition-colors flex items-center space-x-4 border border-white/30">
                  <Settings className="w-6 h-6" />
                  <span className="text-lg font-medium">‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</span>
                </button>
              </Link>
            </div>
          </div>
        </div>
      </div>

      <div className="w-full max-w-7xl mx-auto p-3 sm:p-6 space-y-4 sm:space-y-8">

        {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å */}
        <div className="text-center space-y-4">
          <div className="bg-white/10 backdrop-blur-xl rounded-2xl p-4 sm:p-6 border border-white/20 shadow-2xl">
            <h1 className="text-3xl sm:text-4xl md:text-5xl font-bold text-white mb-2 sm:mb-4 bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
              üéØ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß
            </h1>
            <p className="text-lg sm:text-xl md:text-2xl text-purple-200 font-medium">Thai Robux Redemption System</p>
            <div className="mt-4 sm:mt-6 flex flex-col sm:flex-row justify-center space-y-2 sm:space-y-0 sm:space-x-4">
              <div className="bg-green-500/20 rounded-full px-3 py-1 sm:px-4 sm:py-2 border border-green-400/30">
                <span className="text-green-300 text-xs sm:text-sm">üü¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</span>
              </div>
              <div className="bg-blue-500/20 rounded-full px-3 py-1 sm:px-4 sm:py-2 border border-blue-400/30">
                <span className="text-blue-300 text-xs sm:text-sm">‚ö° Real-time Updates</span>
              </div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-8">
          {/* ‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢: ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß */}
          <div className="space-y-4 sm:space-y-6">
            <div className="bg-white/10 backdrop-blur-xl rounded-2xl p-4 sm:p-6 border border-white/20 shadow-2xl">
              <div className="text-center mb-4 sm:mb-6">
                <h2 className="text-2xl sm:text-3xl font-bold text-white mb-2">üîç ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß</h2>
                <p className="text-purple-200 text-sm sm:text-base">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°</p>
              </div>
              
              <div className="space-y-4 sm:space-y-6">
                <div className="flex gap-2 sm:gap-3">
                  <Input
                    type="text"
                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡πÄ‡∏ä‡πà‡∏ô: PlayerName)"
                    value={queueNumber}
                    onChange={(e) => setQueueNumber(e.target.value)}
                    className="flex-1 bg-white/10 border-white/20 text-white placeholder:text-purple-300 rounded-xl sm:rounded-2xl text-sm sm:text-base"
                  />
                  <Button 
                    onClick={handleCheckStatus} 
                    disabled={loading}
                    className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-xl sm:rounded-2xl px-3 sm:px-6 text-sm sm:text-base"
                  >
                    {loading ? (
                      <div className="flex items-center">
                        <div className="animate-spin rounded-full h-3 w-3 sm:h-4 sm:w-4 border-b-2 border-white mr-1 sm:mr-2"></div>
                        <span className="hidden sm:inline">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö...</span>
                        <span className="sm:hidden">‡∏Å‡∏≥‡∏•‡∏±‡∏á...</span>
                      </div>
                    ) : (
                      <div className="flex items-center">
                        <Search className="w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2" />
                        <span className="hidden sm:inline">‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</span>
                        <span className="sm:hidden">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</span>
                      </div>
                    )}
                  </Button>
                </div>

                {error && (
                  <Alert className="border-red-400/30 bg-red-500/10 backdrop-blur-sm rounded-xl sm:rounded-2xl">
                    <AlertCircle className="h-4 w-4 text-red-400" />
                    <AlertDescription className="text-red-300">
                      <div className="space-y-2 sm:space-y-3">
                        <div className="text-sm sm:text-base">{error}</div>
                        <div className="flex flex-col sm:flex-row items-start sm:items-center justify-between space-y-2 sm:space-y-0">
                          <span className="text-xs sm:text-sm text-red-200">‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</span>
                          <Button
                            onClick={() => setShowLineQRPopup(true)}
                            size="sm"
                            className="bg-blue-600 hover:bg-blue-700 text-white rounded-lg px-3 py-1 text-xs sm:text-sm"
                          >
                            <MessageCircle className="h-3 w-3 sm:h-4 sm:w-4 mr-1" />
                            <span className="hidden sm:inline">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</span>
                            <span className="sm:hidden">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</span>
                          </Button>
                        </div>
                      </div>
                    </AlertDescription>
                  </Alert>
                )}

                {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå */}
                {searchResults.length > 1 && (
                  <div className="bg-white/10 backdrop-blur-sm rounded-xl sm:rounded-2xl p-3 sm:p-4 border border-white/20">
                    <h3 className="text-white font-semibold mb-2 sm:mb-3 text-sm sm:text-base">‡∏û‡∏ö‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô {searchResults.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</h3>
                    <div className="space-y-2">
                      {searchResults.map((result) => (
                        <div
                          key={result.id}
                          onClick={() => handleSelectQueue(result)}
                          className="bg-white/5 hover:bg-white/10 rounded-lg p-2 sm:p-3 cursor-pointer transition-colors border border-white/10"
                        >
                          <div className="flex items-center justify-between">
                            <div>
                              <div className="text-white font-medium text-sm sm:text-base">‡∏Ñ‡∏¥‡∏ß #{result.queue_number}</div>
                              <div className="text-purple-200 text-xs sm:text-sm">
                                {result.roblox_username && `‡∏ä‡∏∑‡πà‡∏≠: ${result.roblox_username}`}
                                {result.assigned_code && ` | ‡πÇ‡∏Ñ‡πâ‡∏î: ${result.assigned_code}`}
                              </div>
                            </div>
                            <Badge className={`${getStatusInfo(result.status).color} text-white rounded-full px-2 py-1 text-xs`}>
                              {getStatusInfo(result.status).text}
                            </Badge>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}

                {queueItem && (
                  <div className="bg-gradient-to-br from-blue-500/20 to-purple-500/20 backdrop-blur-sm rounded-2xl p-4 sm:p-6 border border-white/20">
                    <div className="text-center mb-4">
                      <div className="text-4xl sm:text-5xl md:text-6xl font-bold text-white mb-2 drop-shadow-lg">
                        #{queueItem.queue_number}
                      </div>
                      <div className="flex items-center justify-center mb-2">
                        <span className="text-xl sm:text-2xl mr-2">{getProductTypeInfo(queueItem.product_type).icon}</span>
                        <span className="text-lg sm:text-xl font-semibold text-white">{getProductTypeInfo(queueItem.product_type).name}</span>
                      </div>
                    </div>

                    <div className="space-y-3">
                      <div className="flex items-center justify-between bg-white/10 rounded-xl p-3">
                        <span className="font-medium text-purple-200 text-sm">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</span>
                        <Badge className={`${getStatusInfo(queueItem.status).color} text-white rounded-full px-3 py-1 text-xs`}>
                          <div className="flex items-center">
                            {getStatusInfo(queueItem.status).icon}
                            <span className="ml-1">{getStatusInfo(queueItem.status).text}</span>
                          </div>
                        </Badge>
                      </div>

        {(queueItem.roblox_username || queueItem.customer_name) && (
          <div className="flex items-center justify-between bg-white/10 rounded-xl p-3">
            <span className="font-medium text-purple-200 text-sm">üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:</span>
            <span className="text-white text-sm">{queueItem.roblox_username || queueItem.customer_name}</span>
          </div>
        )}

        {queueItem.contact_info && (
          <div className="flex items-center justify-between bg-white/10 rounded-xl p-3">
            <span className="font-medium text-purple-200 text-sm">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:</span>
            <span className="text-white text-xs">
              {hidePasswordInContactInfo(queueItem.contact_info)}
            </span>
          </div>
        )}

        {queueItem.roblox_username && (
          <div className="flex items-center justify-between bg-white/10 rounded-xl p-3">
            <span className="font-medium text-purple-200 text-sm">üéÆ Roblox Username:</span>
            <span className="text-white text-sm">{queueItem.roblox_username}</span>
          </div>
        )}

        {queueItem.roblox_password && (
          <div className="flex items-center justify-between bg-white/10 rounded-xl p-3">
            <span className="font-medium text-purple-200 text-sm">üîí ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô:</span>
            <span className="text-white font-mono text-sm">‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢</span>
          </div>
        )}

        {queueItem.robux_amount && (
          <div className="flex items-center justify-between bg-white/10 rounded-xl p-3">
            <span className="font-medium text-purple-200 text-sm">üíé ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux:</span>
            <span className="text-white text-sm">{queueItem.robux_amount}</span>
          </div>
        )}

        {queueItem.assigned_code && (
          <div className="flex items-center justify-between bg-white/10 rounded-xl p-3">
            <span className="font-medium text-purple-200 text-sm">üé´ ‡πÇ‡∏Ñ‡πâ‡∏î:</span>
            <span className="text-white font-mono text-sm">{queueItem.assigned_code}</span>
          </div>
        )}

        {queueItem.assigned_account_code && (
          <div className="flex items-center justify-between bg-white/10 rounded-xl p-3">
            <span className="font-medium text-purple-200 text-sm">üîë Account Code:</span>
            <span className="text-white font-mono text-sm">{queueItem.assigned_account_code}</span>
          </div>
        )}
                      
                      <div className="flex items-center justify-between bg-white/10 rounded-xl p-3">
                        <span className="font-medium text-purple-200 text-sm">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß:</span>
                        <span className="text-white text-sm">{formatDate(queueItem.created_at)}</span>
                      </div>

                      {queueItem.status === 'waiting' && queuePosition > 0 && (
                        <div className="flex items-center justify-between bg-gradient-to-r from-yellow-500/20 to-orange-500/20 rounded-xl p-3 border border-yellow-400/30">
                          <span className="font-medium text-yellow-200 text-sm">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß:</span>
                          <span className="font-bold text-lg text-yellow-300">‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà {queuePosition}</span>
                        </div>
                      )}
                      
                      {queueItem.estimated_wait_time && queueItem.status === 'waiting' && (
                        <div className="flex items-center justify-between bg-white/10 rounded-xl p-3">
                          <span className="font-medium text-purple-200 text-sm">‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì:</span>
                          <span className="text-white font-semibold text-sm">{queueItem.estimated_wait_time} ‡∏ô‡∏≤‡∏ó‡∏µ</span>
                        </div>
                      )}

                      {queueItem.admin_notes && (
                        <div className="bg-gradient-to-r from-yellow-500/20 to-orange-500/20 backdrop-blur-sm rounded-xl p-3 border border-yellow-400/30">
                          <div className="flex items-start gap-2">
                            <MessageSquare className="w-4 h-4 text-yellow-300 mt-0.5 flex-shrink-0" />
                            <div>
                              <span className="font-medium text-yellow-200 block mb-1 text-sm">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô:</span>
                              <span className="text-yellow-100 text-xs">{queueItem.admin_notes}</span>
                            </div>
                          </div>
                        </div>
                      )}
                    </div>

                    <div className="mt-4 bg-blue-500/20 backdrop-blur-sm rounded-xl p-3 border border-blue-400/30">
                      <p className="text-xs text-blue-200 text-center">üí° {getStatusInfo(queueItem.status).description}</p>
                    </div>

                    {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ */}
                    {(queueItem.status === 'cancelled' || queueItem.status === 'waiting') && (
                      <div className="mt-3 bg-blue-500/20 backdrop-blur-sm rounded-xl p-3 border border-blue-400/30">
                        <div className="text-center space-y-3">
                          <p className="text-xs text-blue-200">üìû ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠? ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢</p>
                          <div className="flex flex-col sm:flex-row gap-2 justify-center">
                          </div>
                          <Button
                            onClick={() => setShowLineQRPopup(true)}
                            className="bg-green-600 hover:bg-green-700 text-white rounded-lg px-4 py-2 text-sm"
                          >
                            <MessageCircle className="h-3 w-3 mr-1" />
                            ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå (mixzis)
                          </Button>
                        </div>
                      </div>
                    )}

                    {/* ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç */}
                    {queueItem.status === 'problem' && (
                      <div className="mt-3 bg-orange-500/20 backdrop-blur-sm rounded-xl p-4 border border-orange-400/30">
                        <div className="space-y-4">
                          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏õ‡∏±‡∏ç‡∏´‡∏≤ */}
                          <div className="text-center">
                            <div className="inline-flex items-center gap-2 bg-orange-600/50 px-3 py-2 rounded-lg mb-3">
                              <span className="text-2xl">
                                {queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏°‡∏û') && 'üó∫Ô∏è'}
                                {queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå') && 'üì±'}
                                {queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏°‡∏•') && 'üìß'}
                                {queueItem.admin_notes?.includes('‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏¥‡∏î') && 'üîí'}
                                {!queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏°‡∏û') && 
                                 !queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå') && 
                                 !queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏°‡∏•') && 
                                 !queueItem.admin_notes?.includes('‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏¥‡∏î') && '‚ùì'}
                              </span>
                              <span className="text-orange-200 font-semibold">
                                {queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏°‡∏û') && '‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏°‡∏û'}
                                {queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå') && '‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå'}
                                {queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏°‡∏•') && '‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏°‡∏•'}
                                {queueItem.admin_notes?.includes('‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏¥‡∏î') && '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏¥‡∏î'}
                                {!queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏°‡∏û') && 
                                 !queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå') && 
                                 !queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏°‡∏•') && 
                                 !queueItem.admin_notes?.includes('‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏¥‡∏î') && '‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ'}
                              </span>
                            </div>
                          </div>

                          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô */}
                          <div className="bg-white/10 rounded-lg p-3">
                            <h4 className="text-orange-200 font-semibold mb-2 flex items-center gap-2">
                              <span>üí°</span>
                              ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô:
                            </h4>
                            <div className="text-orange-100 text-sm space-y-2">
                              {queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏°‡∏û') && (
                                <>
                                  <p className="font-semibold text-orange-100 mb-2">üì§ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô:</p>
                                  <div className="space-y-1 pl-2 mb-3">
                                    <p>1. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö Roblox ‡∏ö‡∏ô‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</p>
                                    <p>2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å (Home)</p>
                                    <p>3. ‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà <strong>Continue</strong> (‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)</p>
                                    <p>4. ‡πÅ‡∏Ñ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
                                  </div>

                                  <Button
                                    onClick={() => setShowUploadForm(!showUploadForm)}
                                    className="w-full bg-blue-600 hover:bg-blue-700 text-white mb-2"
                                  >
                                    {showUploadForm ? '‚ùå ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°' : 'üì§ ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà'}
                                  </Button>

                                  {showUploadForm && (
                                    <div className="bg-white/10 rounded-lg p-4 space-y-3">
                                      <div>
                                        <Label className="text-orange-200 text-sm mb-2 block">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô:</Label>
                                        <input
                                          type="file"
                                          accept="image/*"
                                          onChange={handleImageSelect}
                                          className="w-full text-sm text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-blue-600 file:text-white hover:file:bg-blue-700 cursor-pointer"
                                        />
                                        <p className="text-xs text-orange-200/70 mt-1">‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå: JPG, PNG (‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB)</p>
                                      </div>

                                      {imagePreview && (
                                        <div className="space-y-2">
                                          <Label className="text-orange-200 text-sm">‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:</Label>
                                          <img
                                            src={imagePreview}
                                            alt="Preview"
                                            className="w-full max-h-60 object-contain rounded-lg border-2 border-orange-400/50"
                                          />
                                        </div>
                                      )}

                                      <Button
                                        onClick={handleImageUpload}
                                        disabled={uploading || !uploadedImage}
                                        className="w-full bg-green-600 hover:bg-green-700 text-white disabled:opacity-50"
                                      >
                                        {uploading ? (
                                          <>
                                            <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                                            ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î...
                                          </>
                                        ) : (
                                          '‚úÖ ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û'
                                        )}
                                      </Button>
                                    </div>
                                  )}

                                  <p className="text-xs mt-2 bg-orange-600/30 px-2 py-1 rounded text-orange-100">
                                    üí° ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
                                  </p>
                                </>
                              )}
                              {queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå') && (
                                <>
                                  <p className="font-semibold text-orange-100 mb-2">üì± ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:</p>
                                  
                                  <div className="bg-blue-500/20 border border-blue-400/50 rounded-lg p-4 mb-3">
                                    <p className="text-white font-semibold mb-2 flex items-center gap-2">
                                      <span>üîì</span>
                                      ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:
                                    </p>
                                    <div className="space-y-2 text-sm">
                                      <p className="bg-white/10 p-2 rounded">
                                        <span className="font-semibold text-yellow-300">‚ö†Ô∏è ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:</span> ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì<span className="font-bold text-yellow-200"> ‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå (Log Out) ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Roblox ‡πÉ‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</span>‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
                                      </p>
                                      <p className="pl-2">1. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏≠‡∏õ Roblox ‡πÉ‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</p>
                                      <p className="pl-2">2. ‡∏Å‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏ô‡∏π (3 ‡∏à‡∏∏‡∏î) ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</p>
                                      <p className="pl-2">3. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "Log Out" ‡∏´‡∏£‡∏∑‡∏≠ "‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö"</p>
                                      <p className="pl-2">4. ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</p>
                                    </div>
                                  </div>

                                  <div className="space-y-1 pl-2 text-sm">
                                    <p className="font-semibold">‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏£‡∏∏‡∏õ:</p>
                                    <p>1. ‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Roblox ‡πÉ‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</p>
                                    <p>2. ‡∏´‡∏≤‡∏Å‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡πâ‡∏ß" ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á</p>
                                    <p>3. ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°/‡∏ó‡∏±‡∏Å‡∏°‡∏≤‡∏ó‡∏≤‡∏á‡πÑ‡∏•‡∏ô‡πå</p>
                                  </div>
                                </>
                              )}
                              {queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏°‡∏•') && (
                                <>
                                  <p className="font-semibold text-orange-100 mb-2">üìß ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≥‡πÄ‡∏°‡∏•‡πÅ‡∏î‡∏á:</p>
                                  
                                  <div className="bg-red-500/20 border border-red-400/50 rounded-lg p-3 mb-3">
                                    <p className="text-white font-semibold mb-2 flex items-center gap-2">
                                      <span>üé•</span>
                                      ‡∏î‡∏π‡∏Ñ‡∏•‡∏¥‡∏õ‡∏™‡∏≠‡∏ô‡∏ó‡∏≥‡πÄ‡∏°‡∏•‡πÅ‡∏î‡∏á:
                                    </p>
                                    <a
                                      href="https://youtu.be/caiYmzge0lk"
                                      target="_blank"
                                      rel="noopener noreferrer"
                                      className="block bg-red-600 hover:bg-red-700 text-white py-3 px-4 rounded-lg text-center font-semibold transition-all"
                                    >
                                      ‚ñ∂Ô∏è ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏™‡∏≠‡∏ô‡∏ó‡∏≥‡πÄ‡∏°‡∏•‡πÅ‡∏î‡∏á
                                    </a>
                                    <p className="text-xs text-orange-100 mt-2">üí° ‡∏î‡∏π‡∏Ñ‡∏•‡∏¥‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô</p>
                                  </div>

                                  <div className="space-y-1 pl-2 text-sm">
                                    <p className="font-semibold">‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏£‡∏∏‡∏õ:</p>
                                    <p>1. ‡∏î‡∏π‡∏Ñ‡∏•‡∏¥‡∏õ‡∏™‡∏≠‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô</p>
                                    <p>2. ‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏•‡∏¥‡∏õ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô</p>
                                    <p>3. ‡∏´‡∏≤‡∏Å‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡πâ‡∏ß" ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á</p>
                                    <p>4. ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°/‡∏ó‡∏±‡∏Å‡∏°‡∏≤‡∏ó‡∏≤‡∏á‡πÑ‡∏•‡∏ô‡πå</p>
                                  </div>
                                </>
                              )}
                              {queueItem.admin_notes?.includes('‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏¥‡∏î') && (
                                <>
                                  <p className="text-orange-200 font-semibold mb-2">üìù ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà:</p>
                                  <Button
                                    onClick={() => setShowUpdateCredentialsForm(!showUpdateCredentialsForm)}
                                    className="w-full bg-blue-600 hover:bg-blue-700 text-white mb-2"
                                  >
                                    {showUpdateCredentialsForm ? '‚ùå ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°' : '‚úèÔ∏è ‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà'}
                                  </Button>
                                  
                                  {showUpdateCredentialsForm && (
                                    <div className="bg-white/10 rounded-lg p-3 space-y-3 mt-2">
                                      <div>
                                        <Label className="text-orange-200 text-sm mb-1 block">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (Username):</Label>
                                        <Input
                                          value={newUsername}
                                          onChange={(e) => setNewUsername(e.target.value)}
                                          placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà"
                                          className="bg-white/20 text-white border-orange-300/50 placeholder:text-gray-400"
                                        />
                                      </div>
                                      <div>
                                        <Label className="text-orange-200 text-sm mb-1 block">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (Password):</Label>
                                        <Input
                                          value={newPassword}
                                          onChange={(e) => setNewPassword(e.target.value)}
                                          placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà"
                                          type="text"
                                          className="bg-white/20 text-white border-orange-300/50 placeholder:text-gray-400"
                                        />
                                      </div>
                                      <Button
                                        onClick={handleUpdateCredentials}
                                        disabled={updatingStatus || !newUsername.trim() || !newPassword.trim()}
                                        className="w-full bg-green-600 hover:bg-green-700 text-white disabled:opacity-50"
                                      >
                                        {updatingStatus ? (
                                          <>
                                            <div className="animate-spin rounded-full h-3 w-3 border-b-2 border-white mr-2"></div>
                                            ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï...
                                          </>
                                        ) : (
                                          '‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà'
                                        )}
                                      </Button>
                                      <p className="text-xs text-orange-200/70">
                                        ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì
                                      </p>
                                    </div>
                                  )}
                                  
                                  <p className="text-xs mt-2 text-orange-100/70">‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ:</p>
                                  <p>1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</p>
                                  <p>2. ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å-‡πÉ‡∏´‡∏ç‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</p>
                                  <p>3. ‡∏•‡∏≠‡∏á‡∏Å‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π</p>
                                </>
                              )}
                              {!queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏°‡∏û') && 
                               !queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå') && 
                               !queueItem.admin_notes?.includes('‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏°‡∏•') && 
                               !queueItem.admin_notes?.includes('‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏¥‡∏î') && (
                                <>
                                  <p>1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
                                  <p>2. ‡∏•‡∏≠‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
                                  <p>3. ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</p>
                                </>
                              )}
                            </div>
                          </div>

                          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡πâ‡∏ß */}
                        <div className="text-center space-y-3">
                            <p className="text-orange-200 text-xs">
                              ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
                            </p>
                          <div className="flex flex-col sm:flex-row gap-2 justify-center">
                            <Button
                                onClick={handleCustomerFixedProblem}
                                disabled={updatingStatus}
                                className="bg-emerald-600 hover:bg-emerald-700 text-white rounded-lg px-4 py-2 text-sm disabled:opacity-50"
                              >
                                {updatingStatus ? (
                                  <>
                                    <div className="animate-spin rounded-full h-3 w-3 border-b-2 border-white mr-1"></div>
                                    ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï...
                                  </>
                                ) : (
                                  <>
                                    <CheckCircle className="h-3 w-3 mr-1" />
                                    ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡πâ‡∏ß
                                  </>
                                )}
                            </Button>
                          <Button
                            onClick={() => setShowLineQRPopup(true)}
                            className="bg-green-600 hover:bg-green-700 text-white rounded-lg px-4 py-2 text-sm"
                          >
                            <MessageCircle className="h-3 w-3 mr-1" />
                            ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå (mixzis)
                          </Button>
                            </div>
                          </div>
                        </div>
                      </div>
                    )}

                    {/* ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡πâ‡∏ß */}
                    {queueItem.status === 'customer_fixed' && (
                      <div className="mt-3 bg-emerald-500/20 backdrop-blur-sm rounded-xl p-4 border border-emerald-400/30">
                        <div className="text-center space-y-3">
                          <div className="inline-flex items-center gap-2 bg-emerald-600/50 px-3 py-2 rounded-lg">
                            <span className="text-2xl">‚úÖ</span>
                            <span className="text-emerald-200 font-semibold">‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡πâ‡∏ß</span>
                          </div>
                          <p className="text-emerald-200 text-sm">
                            ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß<br/>
                            ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà
                          </p>
                          <div className="bg-white/10 rounded-lg p-3">
                            <p className="text-emerald-100 text-xs">
                              üí° ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£" ‡πÉ‡∏ô‡πÑ‡∏°‡πà‡∏ä‡πâ‡∏≤
                            </p>
                          </div>
                        </div>
                      </div>
                    )}
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤: ‡∏à‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏¥‡∏ß */}
          <div className="space-y-4 sm:space-y-6">
            <div className="bg-white/10 backdrop-blur-xl rounded-2xl p-4 sm:p-6 border border-white/20 shadow-2xl">
              <div className="text-center mb-4 sm:mb-6">
                <h2 className="text-2xl sm:text-3xl font-bold text-white mb-2">üì∫ ‡∏à‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏¥‡∏ß</h2>
                <p className="text-purple-200 text-sm sm:text-base">‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏ö‡∏ö Real-time</p>
              </div>
              
              {!queueDisplay ? (
                <div className="text-center py-12">
                  <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-400 mx-auto mb-4"></div>
                  <p className="text-purple-200">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
                </div>
              ) : (
                <div className="space-y-4 sm:space-y-6">
                  {/* ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏° */}
                  <div className="grid grid-cols-2 sm:grid-cols-4 gap-2 sm:gap-4">
                    <div className="bg-gradient-to-br from-green-500/20 to-emerald-500/20 backdrop-blur-sm rounded-xl p-2 sm:p-4 border border-green-400/30 text-center">
                      <div className="flex items-center justify-center mb-1 sm:mb-2">
                        <Users className="w-4 h-4 sm:w-6 sm:h-6 text-green-400 mr-1 sm:mr-2" />
                        <span className="text-lg sm:text-2xl font-bold text-green-300">{queueDisplay.total_waiting}</span>
                      </div>
                      <p className="text-xs sm:text-sm text-green-200">‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</p>
                    </div>
                    <div className="bg-gradient-to-br from-red-500/20 to-pink-500/20 backdrop-blur-sm rounded-xl p-2 sm:p-4 border border-red-400/30 text-center">
                      <div className="flex items-center justify-center mb-1 sm:mb-2">
                        <AlertCircle className="w-4 h-4 sm:w-6 sm:h-6 text-red-400 mr-1 sm:mr-2" />
                        <span className="text-lg sm:text-2xl font-bold text-red-300">{queueDisplay.total_problems}</span>
                      </div>
                      <p className="text-xs sm:text-sm text-red-200">‡∏Ñ‡∏¥‡∏ß‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤</p>
                    </div>
                    <div className="bg-gradient-to-br from-orange-500/20 to-yellow-500/20 backdrop-blur-sm rounded-xl p-2 sm:p-4 border border-orange-400/30 text-center">
                      <div className="flex items-center justify-center mb-1 sm:mb-2">
                        <Clock className="w-4 h-4 sm:w-6 sm:h-6 text-orange-400 mr-1 sm:mr-2" />
                        <span className="text-sm sm:text-lg font-bold text-orange-300">{formatWaitTime(queueDisplay.average_wait_time)}</span>
                      </div>
                      <p className="text-xs sm:text-sm text-orange-200">‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì</p>
                    </div>
                    <div className="bg-gradient-to-br from-purple-500/20 to-pink-500/20 backdrop-blur-sm rounded-xl p-2 sm:p-4 border border-purple-400/30 text-center">
                      <div className="flex items-center justify-center mb-1 sm:mb-2">
                        <Play className="w-4 h-4 sm:w-6 sm:h-6 text-purple-400 mr-1 sm:mr-2" />
                        <span className="text-xs sm:text-sm font-bold text-purple-300">
                          {queueDisplay.current_processing ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' : '‡∏£‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô'}
                        </span>
                      </div>
                      <p className="text-xs sm:text-sm text-purple-200">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</p>
                    </div>
                  </div>

                  {/* ‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ */}
                  {queueDisplay.current_processing && (
                    <div className="bg-gradient-to-br from-red-500/30 to-pink-500/30 backdrop-blur-sm rounded-2xl p-4 border border-red-400/30 text-center">
                      <div className="text-3xl sm:text-4xl font-bold text-white mb-2 drop-shadow-lg">
                        #{queueDisplay.current_processing.queue_number}
                      </div>
                      <div className="flex items-center justify-center mb-2">
                        <span className="text-lg sm:text-xl mr-2">{getProductTypeInfo(queueDisplay.current_processing.product_type).icon}</span>
                        <span className="text-sm sm:text-base text-white">{getProductTypeInfo(queueDisplay.current_processing.product_type).name}</span>
                      </div>
                      {queueDisplay.current_processing.customer_name && (
                        <p className="text-xs text-red-200">{queueDisplay.current_processing.customer_name}</p>
                      )}
                    </div>
                  )}

                  {/* ‡∏Ñ‡∏¥‡∏ß 3 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ */}
                  <div className="bg-gradient-to-br from-blue-500/20 to-indigo-500/20 backdrop-blur-sm rounded-2xl p-4 border border-blue-400/30">
                    <div className="text-center mb-4">
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2">üìã ‡∏Ñ‡∏¥‡∏ß‡∏ñ‡∏±‡∏î‡πÑ‡∏õ</h3>
                    </div>
                    
                    {queueDisplay.next_3_items.filter(item => {
                      if (!searchTerm.trim()) return true;
                      const searchLower = searchTerm.toLowerCase();
                      return (
                        item.queue_number.toString().includes(searchLower) ||
                        (item.roblox_username && item.roblox_username.toLowerCase().includes(searchLower)) ||
                        (item.customer_name && item.customer_name.toLowerCase().includes(searchLower)) ||
                        item.contact_info.toLowerCase().includes(searchLower)
                      );
                    }).length === 0 ? (
                      <div className="text-center py-8">
                        <CheckCircle className="w-16 h-16 mx-auto mb-4 text-green-400 opacity-50" />
                        <p className="text-lg text-white">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏≠‡∏¢‡∏π‡πà</p>
                      </div>
                    ) : (
                      <div className="grid grid-cols-1 gap-4">
                        {queueDisplay.next_3_items
                          .filter(item => {
                            if (!searchTerm.trim()) return true;
                            const searchLower = searchTerm.toLowerCase();
                            return (
                              item.queue_number.toString().includes(searchLower) ||
                              (item.roblox_username && item.roblox_username.toLowerCase().includes(searchLower)) ||
                              (item.customer_name && item.customer_name.toLowerCase().includes(searchLower)) ||
                              item.contact_info.toLowerCase().includes(searchLower)
                            );
                          })
                          .slice(0, 3)
                          .map((item, index) => (
                          <div key={item.id} className="bg-white/10 backdrop-blur-sm rounded-xl p-3 text-center border border-white/20">
                            <div className="text-2xl font-bold text-white mb-1">#{item.queue_number}</div>
                            <div className="flex items-center justify-center mb-1">
                              <span className="text-lg mr-1">{getProductTypeInfo(item.product_type).icon}</span>
                              <span className="text-xs text-purple-200">{getProductTypeInfo(item.product_type).name}</span>
                            </div>
                            <Badge className="bg-blue-500/50 text-blue-200 border-blue-400/30 rounded-full px-2 py-1 text-xs">
                              ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà {index + 1}
                            </Badge>
                          </div>
                        ))}
                      </div>
                    )}
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ */}
        <div className="bg-white/10 backdrop-blur-xl rounded-2xl p-4 sm:p-6 border border-white/20 shadow-2xl">
          <div className="text-center space-y-3 sm:space-y-4">
            <div className="flex flex-col sm:flex-row justify-center space-y-2 sm:space-y-0 sm:space-x-4">
              <div className="bg-blue-500/20 rounded-full px-3 py-1 sm:px-4 sm:py-2 border border-blue-400/30">
                <span className="text-blue-300 text-xs sm:text-sm">üí° ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏î‡∏µ‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</span>
              </div>
              <div className="bg-purple-500/20 rounded-full px-3 py-1 sm:px-4 sm:py-2 border border-purple-400/30">
                <span className="text-purple-300 text-xs sm:text-sm">üìû ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</span>
              </div>
            </div>

            {/* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ */}
            {queueDisplay && queueDisplay.total_problems > 0 && (
              <div className="bg-gradient-to-r from-red-500/20 to-orange-500/20 backdrop-blur-sm rounded-xl p-3 sm:p-4 border border-red-400/30">
                <div className="flex items-center justify-center mb-2">
                  <AlertCircle className="w-5 h-5 sm:w-6 sm:h-6 text-red-400 mr-2" />
                  <span className="text-red-300 font-semibold text-sm sm:text-base">‚ö†Ô∏è ‡∏°‡∏µ‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ {queueDisplay.total_problems} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</span>
                </div>
                <div className="text-red-200 text-xs sm:text-sm space-y-1">
                  <p>‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏ô‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤:</p>
                  <div className="flex flex-col sm:flex-row justify-center items-center space-y-1 sm:space-y-0 sm:space-x-4">
                    <span>1. ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</span>
                    <span>2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏¥‡∏ß‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà</span>
                  </div>
                  <p className="text-red-100">‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</p>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>


      {/* Line QR Code Dialog */}
      <Dialog open={showLineQRPopup} onOpenChange={setShowLineQRPopup}>
        <DialogContent className="sm:max-w-md bg-white/95 backdrop-blur-xl border border-white/20 rounded-3xl">
          <DialogHeader className="text-center pb-4">
            <DialogTitle className="text-green-600 text-xl">üì± ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏•‡∏ô‡πå</DialogTitle>
            <DialogDescription className="text-gray-600">
              ‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ ID: mixzis
            </DialogDescription>
          </DialogHeader>
          
          <div className="text-center space-y-4">
            <div className="flex justify-center">
              <div className="bg-white p-4 rounded-2xl shadow-lg border-2 border-gray-100">
                <img 
                  src="https://img5.pic.in.th/file/secure-sv1/412b63bf382aa3c421169d12ac8941d7.jpg" 
                  alt="Line QR Code" 
                  className="w-48 h-48 mx-auto"
                />
              </div>
            </div>
            
            <div className="bg-blue-50 p-3 rounded-xl border border-blue-200">
              <p className="text-blue-800 text-sm font-medium">
                üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô:
              </p>
              <div className="text-blue-700 text-xs mt-1 space-y-1">
                <p>‚Ä¢ ‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡∏î‡πâ‡∏ß‡∏¢‡πÅ‡∏≠‡∏õ‡πÑ‡∏•‡∏ô‡πå</p>
                <p>‚Ä¢ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ID: <span className="font-bold">mixzis</span></p>
              </div>
            </div>
          </div>
          
          <DialogFooter className="pt-4">
            <Button 
              onClick={() => setShowLineQRPopup(false)} 
              className="w-full bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 rounded-full"
            >
              ‡∏õ‡∏¥‡∏î
            </Button>
          </DialogFooter>
        </DialogContent>
      </Dialog>
    </div>
  );
}

import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Input } from '@/components/ui/input';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { toast } from 'sonner';
import { supabase } from '@/lib/supabase';
import { Link } from 'react-router-dom';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter } from '@/components/ui/dialog';
import { Label } from '@/components/ui/label';
import { Checkbox } from '@/components/ui/checkbox';
import { RedemptionRequest, RedemptionCode, ChickenAccount, QueueItem } from '@/types';
import { GamepadIcon, Settings, Megaphone, MessageCircle } from 'lucide-react';
import { addToQueue, testQueueConnection, testQueueNumberGeneration } from '@/lib/queueApi';
import '@/styles/notifications.css';

export default function Home() {
  const [activeTab, setActiveTab] = useState<'redeem' | 'rainbow'>('redeem');
  type Announcement = {
    id: string;
    title?: string;
    content: string;
    type?: 'info' | 'warning' | 'critical';
    link?: string;
    is_active?: boolean;
    created_at?: string;
  };
  const [announcements, setAnnouncements] = useState<Announcement[]>([]);
  
  // Rainbow Six form states
  const [rainbowForm, setRainbowForm] = useState({
    ubisoftEmail: '',
    ubisoftPassword: '',
    hasXboxAccount: false,
    xboxEmail: '',
    xboxPassword: '',
    redeemCode: '',
    contact: '',
    phoneNumber: ''
  });
  const [showRainbowRedeemPopup, setShowRainbowRedeemPopup] = useState(false);
  const [isRainbowButtonSubmitting, setIsRainbowButtonSubmitting] = useState(false);
  const [rainbowGameInfo, setRainbowGameInfo] = useState<{ code: string } | null>(null);
  const [availableRainbowCodes, setAvailableRainbowCodes] = useState<any[]>([]);
  const [totalRainbowCredits, setTotalRainbowCredits] = useState(0);
  
  // Chicken account redemption states
  const [chickenRedeemCode, setChickenRedeemCode] = useState('');
  const [validatedChickenAccount, setValidatedChickenAccount] = useState<ChickenAccount | null>(null);
  const [showChickenRedeemPopup, setShowChickenRedeemPopup] = useState(false);
  const [availableCodes, setAvailableCodes] = useState<RedemptionCode[]>([]);
  const [availableAccounts, setAvailableAccounts] = useState<ChickenAccount[]>([]);
  const [totalRobuxValue, setTotalRobuxValue] = useState(0);
  const [totalActiveAccounts, setTotalActiveAccounts] = useState(0);
  
  // Loading states
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isRobuxButtonSubmitting, setIsRobuxButtonSubmitting] = useState(false);
  const [isChickenButtonSubmitting, setIsChickenButtonSubmitting] = useState(false);
  
  // Code redemption states
  const [redeemCode, setRedeemCode] = useState('');
  const [validatedCode, setValidatedCode] = useState<RedemptionCode | null>(null);
  const [showRedeemPopup, setShowRedeemPopup] = useState(false);
  const [redeemForm, setRedeemForm] = useState({
    username: '',
    password: '',
    contact: ''
  });

  // ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß
  const [showQueueNumberPopup, setShowQueueNumberPopup] = useState(false);
  const [currentQueueNumber, setCurrentQueueNumber] = useState<number | null>(null);

  // Roblox preparation guide
  const [showRobloxGuide, setShowRobloxGuide] = useState(false);
  const [hasReadGuide, setHasReadGuide] = useState(false);
  const [currentStep, setCurrentStep] = useState(1);
  const [showStepDialog, setShowStepDialog] = useState(false);
  const [step1Completed, setStep1Completed] = useState(false);
  const [step2Completed, setStep2Completed] = useState(false);
  const [allStepsRead, setAllStepsRead] = useState(false);
  
  // Line QR Code popup
  const [showLineQRPopup, setShowLineQRPopup] = useState(false);
  
  // Advertisement popup
  const [showAdPopup, setShowAdPopup] = useState(false);
  const [adData, setAdData] = useState<{
    id: string;
    title: string;
    image_url: string;
    link_url?: string;
    is_active: boolean;
  } | null>(null);

  useEffect(() => {
    loadAvailableItems();
    loadAnnouncements();
    loadAdvertisement();
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß
    testQueueConnection().then(isConnected => {
      if (!isConnected) {
        console.warn('‚ö†Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô - ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô SQL script ‡πÉ‡∏ô Supabase');
        toast.error('‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô');
      }
    });
  }, []);

  // Calculate statistics when data changes
  useEffect(() => {
    if (availableCodes.length > 0) {
              const totalValue = availableCodes.reduce((sum, code) => sum + (code.robux_value || 0), 0);
      setTotalRobuxValue(totalValue);
    }
  }, [availableCodes]);

  useEffect(() => {
    if (availableAccounts.length > 0) {
      const activeAccounts = availableAccounts.filter(account => account.status === 'available').length;
      setTotalActiveAccounts(activeAccounts);
    }
  }, [availableAccounts]);

  useEffect(() => {
    if (availableRainbowCodes.length > 0) {
      const totalCredits = availableRainbowCodes.reduce((sum, code) => sum + (code.credits || 0), 0);
      setTotalRainbowCredits(totalCredits);
    }
  }, [availableRainbowCodes]);

  const loadAvailableItems = async () => {
    try {
      // Load Robux codes
      const { data: codes, error: codesError } = await supabase
        .from('app_284beb8f90_redemption_codes')
        .select('*')
        .eq('status', 'available');
      
      // Load Chicken accounts
      const { data: accounts, error: accountsError } = await supabase
        .from('app_284beb8f90_chicken_accounts')
        .select('*')
        .eq('status', 'available');

      // Load Rainbow Six codes
      const { data: rainbowCodes, error: rainbowError } = await supabase
        .from('app_284beb8f90_rainbow_codes')
        .select('*')
        .eq('is_used', false);

      if (codesError || accountsError) {
        import('@/lib/mockData').then(({ mockCodes, mockAccounts }) => {
          setAvailableCodes(mockCodes);
          setAvailableAccounts(mockAccounts);
          toast.info('‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÇ‡∏´‡∏°‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡πÅ‡∏™‡∏î‡∏á');
        });
      } else {
        setAvailableCodes(codes || []);
        setAvailableAccounts(accounts || []);
      }

      // Set Rainbow Six codes (independent of other data)
      if (rainbowError) {
        console.warn('Could not load Rainbow Six codes from Supabase:', rainbowError);
        setAvailableRainbowCodes([]);
      } else {
        setAvailableRainbowCodes(rainbowCodes || []);
        console.log('‚úÖ Loaded Rainbow Six codes from Supabase:', rainbowCodes?.length || 0, 'codes');
      }
    } catch (error) {
      console.error('Error loading items:', error);
      import('@/lib/mockData').then(({ mockCodes, mockAccounts }) => {
        setAvailableCodes(mockCodes);
        setAvailableAccounts(mockAccounts);
      });
      setAvailableRainbowCodes([]);
    }
  };

  const loadAnnouncements = async () => {
    try {
      // Try Supabase first
      const { data, error } = await supabase
        .from('app_284beb8f90_announcements')
        .select('*')
        .eq('is_active', true)
        .order('created_at', { ascending: false })
        .limit(5);

      if (error) {
        throw error;
      }

      const mapped: Announcement[] = (data || []).map((a: any) => ({
        id: a.id,
        title: a.title,
        content: a.content || a.message,
        type: a.type || 'info',
        link: a.link || undefined,
        is_active: a.is_active,
        created_at: a.created_at,
      }));

      setAnnouncements(mapped);
    } catch (_e) {
      setAnnouncements([]);
    }
  };

  const loadAdvertisement = async () => {
    try {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏õ‡∏¥‡∏î popup ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const adClosed = localStorage.getItem('ad_popup_closed');
      if (adClosed) {
        return; // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á popup ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß
      }

      // ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡∏à‡∏≤‡∏Å Supabase
      const { data, error } = await supabase
        .from('app_284beb8f90_advertisements')
        .select('*')
        .eq('is_active', true)
        .order('created_at', { ascending: false })
        .limit(1)
        .single();

      if (error || !data) {
        console.log('‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡πÅ‡∏™‡∏î‡∏á');
        return;
      }

      setAdData(data);
      
      // ‡πÅ‡∏™‡∏î‡∏á popup ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      setTimeout(() => {
        setShowAdPopup(true);
      }, 1000);
      
    } catch (error) {
      console.error('Error loading advertisement:', error);
    }
  };

  const handleCloseAdPopup = () => {
    setShowAdPopup(false);
    // ‡∏à‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î popup ‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
    localStorage.setItem('ad_popup_closed', Date.now().toString());
  };

  const handleAdClick = () => {
    if (adData?.link_url) {
      window.open(adData.link_url, '_blank');
    }
  };

  const getAlertVariant = (type?: string) => (type === 'critical' ? 'destructive' : 'default');

  const validateCode = async () => {
    if (!redeemCode.trim()) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö");
      return;
    }

    setIsSubmitting(true);
    
    try {
      console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î:', redeemCode.trim());
      
      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á 2 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô (Robux ‡πÅ‡∏•‡∏∞ Chicken)
      const [robuxResult, chickenResult] = await Promise.all([
        // 1. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô Robux codes
        supabase
          .from('app_284beb8f90_redemption_codes')
          .select('*')
          .ilike('code', redeemCode.trim())
          .maybeSingle(),
        
        // 2. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô Chicken accounts
        supabase
          .from('app_284beb8f90_chicken_accounts')
          .select('*')
          .ilike('code', redeemCode.trim())
          .limit(1)
      ]);

      console.log('üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤:', {
        robux: robuxResult.data ? '‚úÖ ‡πÄ‡∏à‡∏≠' : '‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠',
        chicken: (chickenResult.data && chickenResult.data.length > 0) ? '‚úÖ ‡πÄ‡∏à‡∏≠' : '‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠'
      });

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏à‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÑ‡∏´‡∏ô
      let codeData = null;
      let codeType = null;

      if (robuxResult.data) {
        console.log('‚úÖ ‡∏û‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î Robux');
        codeData = robuxResult.data;
        codeType = 'robux';
        
        // Check if Robux code has been used
        if (codeData.status !== 'available') {
          toast.error("‡πÇ‡∏Ñ‡πâ‡∏î Robux ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß");
          return;
        }
      } else if (chickenResult.data && chickenResult.data.length > 0) {
        console.log('‚úÖ ‡∏û‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô');
        codeData = chickenResult.data[0];
        codeType = 'chicken';
        
        // ‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô: ‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πá‡∏Ñ status - ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏£‡∏≠‡∏ö
        console.log('üêî ‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏£‡∏≠‡∏ö - status:', codeData.status);
      }

      // If code doesn't exist in either table
      if (!codeData) {
        toast.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö - ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå");
        return;
      }

      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏•‡∏¢
      if (codeType === 'chicken') {
        setValidatedChickenAccount(codeData);
        setShowChickenRedeemPopup(true);
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô used
        await supabase
          .from('app_284beb8f90_chicken_accounts')
          .update({ 
            status: 'used',
            used_by: 'anonymous_user',
            used_at: new Date().toISOString()
          })
          .eq('id', codeData.id);
        
        toast.success("üêî ‡∏û‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ");
      } else {
        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô Robux ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        setValidatedCode(codeData);
        
        if (!hasReadGuide) {
          setShowRobloxGuide(true);
          return;
        }
        
        setShowRedeemPopup(true);
        toast.success("‡πÇ‡∏Ñ‡πâ‡∏î‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö Robux");
      }

    } catch (error) {
      console.error('Error validating code:', error);
      toast.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î");
    } finally {
      setIsSubmitting(false);
    }
  };


  const handleRobuxSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!redeemForm.username.trim() || !redeemForm.password.trim() || !redeemForm.contact.trim()) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }

    // Validate phone number format (basic validation)
    const phoneRegex = /^0[0-9]{8,9}$/;
    if (!phoneRegex.test(redeemForm.contact.replace(/\s|-/g, ''))) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÄ‡∏ä‡πà‡∏ô 0812345678)");
      return;
    }

    setIsRobuxButtonSubmitting(true);
    const toastId = toast.loading('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î...');

    try {
      // First, update the code status to 'used' in Supabase
      const { error: updateError } = await supabase
        .from('app_284beb8f90_redemption_codes')
        .update({ 
          status: 'used',
          used_by: redeemForm.contact,
          used_at: new Date().toISOString()
        })
        .eq('id', validatedCode!.id);

      if (updateError) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô Supabase ‡πÑ‡∏î‡πâ:', updateError);
        toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÇ‡∏Ñ‡πâ‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', { id: toastId });
        return;
      }

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á redemption request ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å
      try {
        const requestData = {
          roblox_username: redeemForm.username,
          roblox_password: redeemForm.password,
          robux_amount: validatedCode!.robux_value || 0,
          contact_info: `‡∏ä‡∏∑‡πà‡∏≠: ${redeemForm.username} | ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${redeemForm.contact}`,
          phone: redeemForm.contact,
          status: 'pending',
          assigned_code: validatedCode!.code,
          code_id: validatedCode!.id,
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        };

        console.log('üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á request data:', requestData);
        console.log('üîë ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:', validatedCode!.code);

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠
        console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡∏ã‡πâ‡∏≥:', validatedCode!.code);
        const { data: existingCode, error: checkError } = await supabase
          .from('app_284beb8f90_redemption_requests')
          .select('id, assigned_code, status')
          .eq('assigned_code', validatedCode!.code)
          .limit(1);
          
        if (checkError) {
          console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏î‡πâ:', checkError);
        } else if (existingCode && existingCode.length > 0) {
          console.log('‚ö†Ô∏è ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß:', existingCode[0]);
          toast.error('‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏≠‡∏∑‡πà‡∏ô', { id: toastId });
          return;
        } else {
          console.log('‚úÖ ‡πÇ‡∏Ñ‡πâ‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
        }

        // Save the redemption request
        const { error: saveError } = await supabase
          .from('app_284beb8f90_redemption_requests')
          .insert([requestData]);
          
        if (saveError) {
          console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏î‡πâ:', saveError);
          console.error('‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î error:', {
            code: saveError.code,
            message: saveError.message,
            details: saveError.details,
            hint: saveError.hint
          });
          console.error('üìù requestData ‡∏ó‡∏µ‡πà‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:', requestData);
          
          // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô duplicate key error ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
          if (saveError.message.includes('duplicate key') || saveError.code === '23505') {
            toast.error('‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏≠‡∏∑‡πà‡∏ô', { id: toastId });
            return;
          }
          
          // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î error ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢
          try {
            const simpleRequestData = {
              roblox_username: redeemForm.username,
              robux_amount: validatedCode!.robux_value || 0,
              contact_info: `Code: ${validatedCode!.code} | Password: ${redeemForm.password} | Phone: ${redeemForm.contact}`,
              status: 'pending',
              created_at: new Date().toISOString(),
              updated_at: new Date().toISOString()
            };
            
            const { error: simpleError } = await supabase
              .from('app_284beb8f90_redemption_requests')
              .insert([simpleRequestData]);
              
            if (simpleError) {
              console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ:', simpleError);
              if (simpleError.message.includes('duplicate key') || simpleError.code === '23505') {
                toast.error('‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏≠‡∏∑‡πà‡∏ô', { id: toastId });
              } else {
                toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', { id: toastId });
              }
              return;
            }
            
            console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
            
          } catch (simpleError) {
            console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ:', simpleError);
            toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', { id: toastId });
            return;
          }
        }

        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏¥‡∏ß‡πÉ‡∏´‡∏°‡πà
        try {
          const queueData = {
            // ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á queue_items
            contact_info: `‡∏ä‡∏∑‡πà‡∏≠: ${redeemForm.username} | ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${redeemForm.contact}`,
            product_type: 'robux',
            status: 'waiting',
            estimated_wait_time: 15
          };
          
          const newQueueItem = await addToQueue(queueData);
          console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏¥‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', newQueueItem);
          
          // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
          toast.success(`‚úÖ ‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ #${newQueueItem.queue_number}`, { id: toastId });
          
          // ‡πÅ‡∏™‡∏î‡∏á popup ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß
          setShowQueueNumberPopup(true);
          setCurrentQueueNumber(newQueueItem.queue_number);
          
          // ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
          setTimeout(() => {
            window.open('/queue-status', '_blank');
          }, 3000);
          
        } catch (queueError) {
          console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏¥‡∏ß‡πÑ‡∏î‡πâ:', queueError);
          
          // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î error ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug
          if (queueError instanceof Error) {
            console.error('Error details:', {
              message: queueError.message,
              name: queueError.name,
              stack: queueError.stack
            });
          } else {
            console.error('Queue error object:', queueError);
          }
          
          // ‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ
          try {
            console.log('üîÑ ‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ...');
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô
            const { data: tableInfo, error: tableError } = await supabase
              .from('queue_items')
              .select('*')
              .limit(1);
              
            if (tableError) {
              console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á queue_items ‡πÑ‡∏î‡πâ:', tableError);
              toast.success(`‚úÖ ‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! (‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)`, { id: toastId });
              return;
            }
            
            console.log('‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á queue_items ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
            const { data: maxQueue, error: maxError } = await supabase
              .from('queue_items')
              .select('queue_number')
              .order('queue_number', { ascending: false })
              .limit(1)
              .single();
              
            const nextQueueNumber = maxQueue ? maxQueue.queue_number + 1 : 1;
            
            const simpleQueueData = {
              queue_number: nextQueueNumber,
              contact_info: `‡∏ä‡∏∑‡πà‡∏≠: ${redeemForm.username} | ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${redeemForm.contact}`,
              product_type: 'robux',
              status: 'waiting',
              estimated_wait_time: 15
            };
            
            console.log('üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á:', simpleQueueData);
            
            const { data: simpleQueue, error: simpleQueueError } = await supabase
              .from('queue_items')
              .insert(simpleQueueData)
              .select()
              .single();
              
            if (simpleQueueError) {
              console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ:', simpleQueueError);
              console.error('Simple queue error details:', {
                code: simpleQueueError.code,
                message: simpleQueueError.message,
                details: simpleQueueError.details,
                hint: simpleQueueError.hint
              });
              toast.success(`‚úÖ ‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! (‡∏Ñ‡∏¥‡∏ß‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)`, { id: toastId });
            } else {
              console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', simpleQueue);
              toast.success(`‚úÖ ‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ #${simpleQueue.queue_number}`, { id: toastId });
              
              // ‡πÅ‡∏™‡∏î‡∏á popup ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß
              setShowQueueNumberPopup(true);
              setCurrentQueueNumber(simpleQueue.queue_number);
              
              // ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
              setTimeout(() => {
                window.open('/queue-status', '_blank');
              }, 3000);
            }
          } catch (simpleError) {
            console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ:', simpleError);
            toast.success(`‚úÖ ‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! (‡∏Ñ‡∏¥‡∏ß‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)`, { id: toastId });
          }
        }
        
      } catch (requestError) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏î‡πâ:', requestError);
        toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', { id: toastId });
      }
      
      setShowRedeemPopup(false);
      setValidatedCode(null);
      setRedeemCode('');
      setRedeemForm({ username: '', password: '', contact: '' });
      
      loadAvailableItems();

    } catch (error) {
      console.error('Error submitting redemption:', error);
      toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£', { id: toastId });
    } finally {
      setIsRobuxButtonSubmitting(false);
    }
  };

  const handleGuideRead = () => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ó‡∏≥‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1 ‡πÅ‡∏•‡∏∞ 2 ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    if (!step1Completed || !step2Completed) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1 ‡πÅ‡∏•‡∏∞ 2 ‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô");
      return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    if (!allStepsRead) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß");
      return;
    }
    
    setHasReadGuide(true);
    setShowRobloxGuide(false);
    // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î modal ‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡πà‡∏≠
    setShowRedeemPopup(true);
  };

  const handleStepClick = (stepNumber: number) => {
    setCurrentStep(stepNumber);
    setShowStepDialog(true);
  };

  const handleStepDialogClose = () => {
    setShowStepDialog(false);
  };

  const handleRainbowRedeemCode = async () => {
    if (!rainbowForm.redeemCode.trim()) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏Å‡∏° Rainbow Six");
      return;
    }

    if (!rainbowForm.ubisoftEmail.trim() || !rainbowForm.ubisoftPassword.trim()) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Ubisoft ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }

    if (rainbowForm.hasXboxAccount && (!rainbowForm.xboxEmail.trim() || !rainbowForm.xboxPassword.trim())) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Xbox ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }

    if (!rainbowForm.contact.trim()) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠");
      return;
    }

    if (!rainbowForm.phoneNumber.trim()) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå");
      return;
    }

    // Check if the redeem code exists in the Rainbow Six codes table and get credits info
    let codeData = null;
    try {
      const { data: codeCheck, error: codeError } = await supabase
        .from('app_284beb8f90_rainbow_codes')
        .select('*')
        .eq('code', rainbowForm.redeemCode)
        .eq('is_used', false)
        .single();

      if (codeError || !codeCheck) {
        toast.error('‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î Rainbow Six ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
        return;
      }
      codeData = codeCheck;
    } catch (error) {
      toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
      return;
    }

    setIsRainbowButtonSubmitting(true);
    const toastId = toast.loading('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î...');

    try {
      // Simulate sending request to shop
      await new Promise(resolve => setTimeout(resolve, 2000));

      // Create redemption request data matching the table schema
      const requestData = {
        user_id: crypto.randomUUID(),
        discord_username: rainbowForm.contact, // Use contact as discord username
        user_name: rainbowForm.contact, // Use contact as user name
        user_email: rainbowForm.ubisoftEmail,
        user_phone: rainbowForm.phoneNumber,
        ubisoft_username: rainbowForm.ubisoftEmail,
        ubisoft_password: rainbowForm.ubisoftPassword,
        has_xbox_account: rainbowForm.hasXboxAccount,
        xbox_email: rainbowForm.xboxEmail || null,
        xbox_password: rainbowForm.xboxPassword || null,
        credits_requested: codeData?.credits || 1200, // Use actual credits from code or default to 1200
        status: 'pending',
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
        assigned_code: rainbowForm.redeemCode
      };

      // Update Rainbow Six code status to 'used' in Supabase first
      const { error: updateCodeError } = await supabase
        .from('app_284beb8f90_rainbow_codes')
        .update({ 
          is_used: true,
          used_by: null, // Set to null since we don't have actual user authentication
          used_at: new Date().toISOString()
        })
        .eq('code', rainbowForm.redeemCode);

      if (updateCodeError) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏Ñ‡πâ‡∏î Rainbow Six ‡πÉ‡∏ô Supabase ‡πÑ‡∏î‡πâ:', updateCodeError);
        toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÇ‡∏Ñ‡πâ‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', { id: toastId });
        return;
      }

      // Save to Supabase
      const { error: saveError } = await supabase
        .from('app_284beb8f90_rainbow_requests')
        .insert([requestData]);
      
      if (saveError) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠ Rainbow Six ‡πÉ‡∏ô Supabase ‡πÑ‡∏î‡πâ:', saveError);
        toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', { id: toastId });
        return;
      }

      setShowRainbowRedeemPopup(true);
      toast.success('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏ô Supabase ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏ó‡∏≤‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á', { id: toastId });

      // ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      setTimeout(() => {
        window.open('/queue-status', '_blank');
      }, 3000);

      // Reset form
      setRainbowForm({
        ubisoftEmail: '',
        ubisoftPassword: '',
        hasXboxAccount: false,
        xboxEmail: '',
        xboxPassword: '',
        redeemCode: '',
        contact: '',
        phoneNumber: ''
      });

    } catch (error) {
      console.error('Error submitting Rainbow Six request:', error);
      toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠', { id: toastId });
    } finally {
      setIsRainbowButtonSubmitting(false);
    }
  };

  const handleChickenRedeemCode = async () => {
    if (!chickenRedeemCode.trim()) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏•‡∏Å‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ");
      return;
    }

    setIsChickenButtonSubmitting(true);
    const toastId = toast.loading('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î...');

    try {
      // Allow unlimited usage - find account regardless of status
      let foundAccount = availableAccounts.find(account => 
        account.code.toLowerCase() === chickenRedeemCode.toLowerCase()
      );
      
      // Also check used accounts to allow re-entry
      if (!foundAccount) {
        try {
          const { data } = await supabase
            .from('app_284beb8f90_chicken_accounts')
            .select('*')
            .ilike('code', chickenRedeemCode)
            .single();
          foundAccount = data as any;
        } catch (error) {
          foundAccount = null;
        }
      }

      if (!foundAccount) {
        toast.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö - ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå", { id: toastId });
        return;
      }

      // Update account status to 'used' in Supabase (for admin tracking only)
      const { error: updateError } = await supabase
        .from('app_284beb8f90_chicken_accounts')
        .update({ 
          status: 'used',
          used_by: 'anonymous_user',
          used_at: new Date().toISOString()
        })
        .eq('id', foundAccount.id);

      if (updateError) {
        console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÉ‡∏ô Supabase ‡πÑ‡∏î‡πâ:', updateError);
        // Continue anyway since this is just for tracking - user can still get account info
      }

      setValidatedChickenAccount(foundAccount);
      setShowChickenRedeemPopup(true);
      toast.success("‡πÇ‡∏Ñ‡πâ‡∏î‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ", { id: toastId });

      // Don't refresh available accounts - let customer reuse code multiple times

    } catch (error) {
      console.error('Error validating chicken code:', error);
      toast.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î", { id: toastId });
    } finally {
      setIsChickenButtonSubmitting(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 relative">
      <div className="container mx-auto px-4 py-8">
        {announcements.length > 0 && (
          <div className="mb-6 announcement-marquee">
            <div className="bg-white/10 backdrop-blur-xl border border-white/20 rounded-3xl p-3 sm:p-4">
              <div className="flex items-center gap-2 mb-2">
                <Megaphone className="w-5 h-5 text-yellow-300" />
                <span className="text-white font-semibold">‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®</span>
              </div>
              <div className="overflow-hidden">
                <div className="announcement-track" style={{ ['--marquee-duration' as any]: `${Math.max(18, announcements.length * 6)}s` }}>
                  {announcements.map((a) => (
                    <span key={a.id} className={`announcement-pill ${a.type || 'info'}`}>
                      <span className="text-sm">
                        {a.type === 'critical' || a.type === 'warning' ? '‚ö†Ô∏è' : 'üì£'}
                      </span>
                      {a.title && <span className="hidden sm:inline">{a.title}:</span>}
                      <span className="opacity-90">{a.content}</span>
                      {a.link && (
                        <button
                          onClick={() => window.open(a.link!, '_blank')}
                          className="announcement-cta ml-2 text-xs"
                        >
                          ‡∏î‡∏π‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                        </button>
                      )}
                    </span>
                  ))}
                  {/* Duplicate for seamless loop */}
                  {announcements.map((a) => (
                    <span key={`${a.id}-dup`} className={`announcement-pill ${a.type || 'info'}`}>
                      <span className="text-sm">
                        {a.type === 'critical' || a.type === 'warning' ? '‚ö†Ô∏è' : 'üì£'}
                      </span>
                      {a.title && <span className="hidden sm:inline">{a.title}:</span>}
                      <span className="opacity-90">{a.content}</span>
                      {a.link && (
                        <button
                          onClick={() => window.open(a.link!, '_blank')}
                          className="announcement-cta ml-2 text-xs"
                        >
                          ‡∏î‡∏π‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                        </button>
                      )}
                    </span>
                  ))}
                </div>
              </div>
            </div>
          </div>
        )}
        {/* Header */}
        <div className="flex justify-between items-center mb-8">
          <div className="flex items-center space-x-3">
            <div className="w-16 h-16 rounded-2xl flex items-center justify-center">
              <img 
                src="https://img5.pic.in.th/file/secure-sv1/2318a16a76694dc8dccbd75362a64368deb68b00127501b51b1a9a0588ca2f42.png" 
                alt="Lemon Shop Logo" 
                className="w-16 h-16 object-contain"
              />
            </div>
            <div>
              <h1 className="text-white text-xl font-bold">Lemon Shop</h1>
              <p className="text-purple-200 text-sm">‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• - Robux & Chicken Accounts</p>
            </div>
          </div>
          
          <div className="flex space-x-3">
            <Link to="/queue-status">
              <Button className="bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 backdrop-blur-xl border border-green-500/30 text-white transition-all rounded-full">
                üîç ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß
              </Button>
            </Link>
            <Link to="/admin">
              <Button className="bg-white/10 backdrop-blur-xl border border-white/20 text-white hover:bg-white/20 transition-all rounded-full">
                <Settings className="w-4 h-4 mr-2" />
                üëë ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
              </Button>
            </Link>
            <Button 
              onClick={() => window.open('https://www.facebook.com/LemonShopStore/', '_blank')}
              className="bg-gradient-to-r from-blue-600 to-blue-700 backdrop-blur-xl border border-blue-500/30 text-white hover:from-blue-700 hover:to-blue-800 transition-all shadow-lg rounded-full"
            >
              <svg className="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
                <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
              </svg>
              üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô
            </Button>
            <Button 
              onClick={() => window.open('https://lemonshop.rdcw.xyz/', '_blank')}
              className="bg-gradient-to-r from-orange-600 to-yellow-600 backdrop-blur-xl border border-orange-500/30 text-white hover:from-orange-700 hover:to-yellow-700 transition-all shadow-lg rounded-full"
            >
              üõí ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
            </Button>
          </div>
        </div>

        {/* ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß */}
        <div className="mb-6">
          <div className="bg-gradient-to-r from-green-500/20 to-emerald-500/20 backdrop-blur-xl border border-green-400/30 rounded-3xl p-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <div className="text-2xl">üì∫</div>
                <div>
                  <h3 className="text-white font-semibold">‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h3>
                  <p className="text-green-200 text-sm">‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡πÑ‡∏î‡πâ</p>
                </div>
              </div>
                             <Link to="/queue-status">
                 <Button className="bg-green-600 hover:bg-green-700 text-white rounded-full">
                   ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß
                 </Button>
               </Link>
            </div>
          </div>
        </div>

        {/* Statistics Cards */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <Card className="bg-white/10 backdrop-blur-xl border-white/20 text-center rounded-3xl">
            <CardContent className="p-6">
              <div className="text-4xl mb-2">üéÆ</div>
              <div className="text-2xl font-bold text-white">{availableCodes.length}</div>
              <div className="text-purple-200 text-sm">Robux Codes</div>
              <div className="text-xs text-white/60 mt-1">{totalRobuxValue.toLocaleString()} R$</div>
            </CardContent>
          </Card>
          
          <Card className="bg-white/10 backdrop-blur-xl border-white/20 text-center rounded-3xl">
            <CardContent className="p-6">
              <div className="text-4xl mb-2">üêî</div>
              <div className="text-2xl font-bold text-white">{availableAccounts.filter(account => account.status === 'available').length}</div>
              <div className="text-purple-200 text-sm">Chicken Accounts</div>
              <div className="text-xs text-white/60 mt-1">‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</div>
            </CardContent>
          </Card>
          
          <Card className="bg-white/10 backdrop-blur-xl border-white/20 text-center rounded-3xl">
            <CardContent className="p-6">
              <div className="text-4xl mb-2">üåà</div>
              <div className="text-2xl font-bold text-white">{availableRainbowCodes.length}</div>
              <div className="text-purple-200 text-sm">Rainbow Six Codes</div>
              <div className="text-xs text-white/60 mt-1">{totalRainbowCredits.toLocaleString()} Credits</div>
            </CardContent>
          </Card>
          
          <Card className="bg-white/10 backdrop-blur-xl border-white/20 text-center rounded-3xl">
            <CardContent className="p-6">
              <div className="text-4xl mb-2">üîí</div>
              <div className="text-2xl font-bold text-green-400">100%</div>
              <div className="text-purple-200 text-sm">Secure</div>
              <div className="text-xs text-white/60 mt-1">‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô</div>
            </CardContent>
          </Card>
        </div>

        <div className="flex justify-center mb-6 md:mb-8 px-4">
          <div className="bg-white/10 backdrop-blur-xl rounded-2xl md:rounded-3xl p-1 md:p-2 border border-white/20 w-full max-w-md">
            <div className="grid grid-cols-2 gap-1">
              <Button
                onClick={() => setActiveTab('redeem')}
                className={`px-2 md:px-6 py-2 md:py-3 rounded-xl md:rounded-full transition-all text-xs md:text-sm ${
                  activeTab === 'redeem'
                    ? 'bg-gradient-to-r from-green-600 to-emerald-600 text-white shadow-lg'
                    : 'bg-transparent text-white/70 hover:text-white hover:bg-white/10'
                }`}
              >
                <span className="hidden sm:inline">üé´ Robux & ‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô</span>
                <span className="sm:hidden">üé´üêî</span>
              </Button>
              
              <Button
                onClick={() => setActiveTab('rainbow')}
                className={`px-2 md:px-6 py-2 md:py-3 rounded-xl md:rounded-full transition-all text-xs md:text-sm ${
                  activeTab === 'rainbow'
                    ? 'bg-gradient-to-r from-blue-600 to-orange-600 text-white shadow-lg'
                    : 'bg-transparent text-white/70 hover:text-white hover:bg-white/10'
                }`}
              >
                <span className="hidden sm:inline">üéÆ Rainbow Six</span>
                <span className="sm:hidden">üéÆ</span>
              </Button>
            </div>
          </div>
        </div>

        {/* Main Content Area */}
        <div className="max-w-4xl mx-auto">
          {activeTab === 'redeem' && (
            <Card className="bg-white/10 backdrop-blur-xl border-white/20 mb-6 md:mb-8 rounded-2xl md:rounded-3xl">
              <CardHeader className="text-center p-4 md:p-6">
                <CardTitle className="text-lg md:text-2xl text-white flex items-center justify-center space-x-2">
                  <span className="text-2xl md:text-3xl">üí≥üêî</span>
                  <span>‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏£‡∏±‡∏ö Robux ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô</span>
                </CardTitle>
                <p className="text-blue-200 text-sm md:text-base">
                  ‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö - ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
                </p>
              </CardHeader>
              <CardContent className="space-y-4 md:space-y-6 p-4 md:p-6">
                {/* Warning Messages for Robux redemption */}
                {activeTab === 'redeem' && (
                  <div className="space-y-2 md:space-y-3">
                    <Alert className="border-yellow-500/50 bg-yellow-500/10 backdrop-blur-md rounded-xl">
                      <AlertDescription className="text-yellow-300 text-xs md:text-sm">
                        üö´ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ROBUX ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡∏ô‡∏≤‡∏ó‡∏µ - 3 ‡∏ä‡∏°.
                      </AlertDescription>
                    </Alert>

                    <Alert className="border-red-500/50 bg-red-500/10 backdrop-blur-md rounded-xl">
                      <AlertDescription className="text-red-300 text-xs md:text-sm leading-relaxed">
                        üö´üö´‡πÇ‡∏î‡∏¢‡∏Å‡∏î‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πä‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏öüö´üö´
                      </AlertDescription>
                    </Alert>
                  </div>
                )}

                <div className="space-y-4">
                  <div>
                    <label className="block text-white text-sm font-medium mb-2">
                      ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö (Robux ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô)
                    </label>
                    <div className="flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-3">
                      <Input
                        value={redeemCode}
                        onChange={(e) => setRedeemCode(e.target.value)}
                        placeholder="‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á Robux ‡πÅ‡∏•‡∏∞‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô)"
                        className="bg-white/10 border-white/20 text-white placeholder:text-white/50 flex-1 rounded-xl md:rounded-2xl h-12 text-base"
                        onKeyPress={(e) => e.key === 'Enter' && validateCode()}
                      />
                      <Button
                        onClick={validateCode}
                        disabled={isSubmitting}
                        className="bg-gradient-to-r rounded-xl md:rounded-full h-12 px-6 text-sm md:text-base from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700"
                      >
                        {isSubmitting ? '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö...' : '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö'}
                      </Button>
                    </div>
                  </div>
                  
                  <div className="bg-blue-900/30 border border-blue-500/30 rounded-xl md:rounded-2xl p-3 md:p-4">
                    <p className="text-blue-100 text-xs md:text-sm leading-relaxed">
                      <strong>üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:</strong> ‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏Å‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏´‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î Robux ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô
                    </p>
                  </div>

                  {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå */}
                  <div className="bg-green-500/20 border border-green-500/30 rounded-xl md:rounded-2xl p-3 md:p-4">
                    <div className="text-center space-y-2">
                      <p className="text-green-200 text-xs md:text-sm">üìû ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠? ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢</p>
                      <div className="flex justify-center">
                        <Button
                          onClick={() => setShowLineQRPopup(true)}
                          className="bg-green-600 hover:bg-green-700 text-white rounded-lg px-4 py-2 text-sm"
                        >
                          <MessageCircle className="h-3 w-3 mr-1" />
                          ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå (mixzis)
                        </Button>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          )}

          {activeTab === 'rainbow' && (
            <Card className="bg-white/10 backdrop-blur-xl border-white/20 mb-8 rounded-3xl">
              <CardHeader className="text-center">
                <CardTitle className="text-2xl text-white flex items-center justify-center space-x-2">
                  <GamepadIcon className="w-8 h-8" />
                  <span>‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î Rainbow Six</span>
                </CardTitle>
                <p className="text-blue-200">‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Ubisoft ‡πÅ‡∏•‡∏∞‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏Å‡∏£‡∏±‡∏ö</p>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="space-y-4">
                  <div className="space-y-2">
                    <Label htmlFor="ubisoft-email" className="text-white/80">‡∏≠‡∏µ‡πÄ‡∏°‡∏• Ubisoft</Label>
                    <Input
                      id="ubisoft-email"
                      type="email"
                      value={rainbowForm.ubisoftEmail}
                      onChange={(e) => setRainbowForm(prev => ({ ...prev, ubisoftEmail: e.target.value }))}
                      placeholder="email@example.com"
                      className="border-white/20 bg-white/10 text-white placeholder:text-white/50 rounded-2xl"
                    />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="ubisoft-password" className="text-white/80">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô Ubisoft</Label>
                    <Input
                      id="ubisoft-password"
                      type="password"
                      value={rainbowForm.ubisoftPassword}
                      onChange={(e) => setRainbowForm(prev => ({ ...prev, ubisoftPassword: e.target.value }))}
                      placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                      className="border-white/20 bg-white/10 text-white placeholder:text-white/50 rounded-2xl"
                    />
                  </div>

                  <div className="space-y-3">
                    <div className="flex items-center space-x-2">
                      <Checkbox
                        id="has-xbox"
                        checked={rainbowForm.hasXboxAccount}
                        onCheckedChange={(checked) => setRainbowForm(prev => ({ 
                          ...prev, 
                          hasXboxAccount: checked as boolean,
                          xboxEmail: checked ? prev.xboxEmail : '',
                          xboxPassword: checked ? prev.xboxPassword : ''
                        }))}
                        className="border-white/40 data-[state=checked]:bg-blue-600 data-[state=checked]:border-blue-600"
                      />
                      <Label htmlFor="has-xbox" className="text-white/80 cursor-pointer">
                        ‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Xbox ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Ubisoft
                      </Label>
                    </div>
                    
                    {rainbowForm.hasXboxAccount && (
                      <div className="space-y-3 pl-6 border-l-2 border-blue-500/30">
                        <div className="space-y-2">
                          <Label htmlFor="xbox-email" className="text-white/80">‡∏≠‡∏µ‡πÄ‡∏°‡∏• Xbox</Label>
                          <Input
                            id="xbox-email"
                            type="email"
                            value={rainbowForm.xboxEmail}
                            onChange={(e) => setRainbowForm(prev => ({ ...prev, xboxEmail: e.target.value }))}
                            placeholder="xbox@example.com"
                            className="border-white/20 bg-white/10 text-white placeholder:text-white/50 rounded-2xl"
                          />
                        </div>
                        
                        <div className="space-y-2">
                          <Label htmlFor="xbox-password" className="text-white/80">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô Xbox</Label>
                          <Input
                            id="xbox-password"
                            type="password"
                            value={rainbowForm.xboxPassword}
                            onChange={(e) => setRainbowForm(prev => ({ ...prev, xboxPassword: e.target.value }))}
                            placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                            className="border-white/20 bg-white/10 text-white placeholder:text-white/50 rounded-2xl"
                          />
                        </div>
                      </div>
                    )}
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="rainbow-redeem-code" className="text-white/80">‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏•‡∏Å‡∏£‡∏±‡∏ö Rainbow Six</Label>
                    <Input
                      id="rainbow-redeem-code"
                      value={rainbowForm.redeemCode}
                      onChange={(e) => setRainbowForm(prev => ({ ...prev, redeemCode: e.target.value }))}
                      placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏•‡∏Å‡∏£‡∏±‡∏ö"
                      className="border-white/20 bg-white/10 text-white placeholder:text-white/50 h-11 text-center font-mono uppercase rounded-2xl"
                    />
                  </div>

                  <div className="space-y-4">
                    <div className="bg-orange-900/30 border border-orange-500/30 rounded-2xl p-4">
                      <h4 className="text-orange-200 font-medium mb-2 flex items-center">
                        <span className="text-xl mr-2">‚ö†Ô∏è</span>
                        ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å!)
                      </h4>
                      <p className="text-orange-100 text-sm">
                        ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ
                      </p>
                    </div>
                    
                    <div className="space-y-2">
                      <Label htmlFor="contact" className="text-white/80 font-medium">
                        Discord / LINE ID / Facebook *
                      </Label>
                      <Input
                        id="contact"
                        value={rainbowForm.contact}
                        onChange={(e) => setRainbowForm(prev => ({ ...prev, contact: e.target.value }))}
                        placeholder="‡∏Å‡∏£‡∏≠‡∏Å Discord, LINE ID ‡∏´‡∏£‡∏∑‡∏≠ Facebook ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
                        className="border-white/20 bg-white/10 text-white placeholder:text-white/50 rounded-2xl"
                      />
                    </div>
                    
                    <div className="space-y-2">
                      <Label htmlFor="phone-number" className="text-white/80 font-medium">
                        ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå *
                      </Label>
                      <Input
                        id="phone-number"
                        value={rainbowForm.phoneNumber}
                        onChange={(e) => setRainbowForm(prev => ({ ...prev, phoneNumber: e.target.value }))}
                        placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡πÄ‡∏ä‡πà‡∏ô 08X-XXX-XXXX)"
                        className="border-white/20 bg-white/10 text-white placeholder:text-white/50 rounded-2xl"
                      />
                    </div>
                  </div>
                </div>
                
                <Button 
                  onClick={handleRainbowRedeemCode} 
                  className="w-full mt-6 bg-gradient-to-r from-blue-600 via-orange-600 to-red-600 hover:from-blue-700 hover:via-orange-700 hover:to-red-700 text-white font-bold py-3 text-lg rounded-full" 
                  disabled={isRainbowButtonSubmitting}
                >
                  {isRainbowButtonSubmitting ? (
                    <div className="flex items-center justify-center gap-2">
                      <div className="w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin"></div>
                      <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠...</span>
                    </div>
                  ) : (
                    <div className="flex items-center justify-center gap-2">
                      <GamepadIcon className="w-4 h-4" />
                      <span>‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î</span>
                    </div>
                  )}
                </Button>

                <div className="bg-blue-900/30 border border-blue-500/30 rounded-2xl p-4">
                  <h4 className="text-blue-200 font-medium mb-2">üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</h4>
                  <p className="text-blue-100 text-sm">
                    ‚Ä¢ ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Ubisoft ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô<br/>
                    ‚Ä¢ ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Xbox ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡πä‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Xbox ‡∏î‡πâ‡∏ß‡∏¢<br/>
                    ‚Ä¢ ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏î‡∏µ‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡πâ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á<br/>
                    ‚Ä¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞<br/>
                    ‚Ä¢ ‡∏£‡∏∞‡∏ö‡∏∏‡∏ó‡∏±‡πâ‡∏á Discord/LINE/Facebook ‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏™‡∏∞‡∏î‡∏ß‡∏Å
                  </p>
                </div>
              </CardContent>
            </Card>
          )}
        </div>



        {/* Rainbow Six Success Dialog */}
        <Dialog open={showRainbowRedeemPopup} onOpenChange={setShowRainbowRedeemPopup}>
          <DialogContent className="sm:max-w-md bg-white/95 backdrop-blur-xl border border-white/20 rounded-3xl">
            <DialogHeader>
              <DialogTitle className="text-blue-600 text-xl">üéÆ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ Rainbow Six ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</DialogTitle>
              <DialogDescription className="text-gray-600">
                ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô Supabase ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß
              </DialogDescription>
            </DialogHeader>
            
            <div className="p-4 border rounded-2xl bg-green-50">
              <div className="text-center space-y-3">
                <div className="text-6xl">‚úÖ</div>
                <div className="text-green-700">
                  <p className="font-semibold">‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß!</p>
                  <p className="text-sm mt-2">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Supabase Database<br/>‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</p>
                </div>
              </div>
            </div>
            
            <DialogFooter className="mt-4">
              <Button 
                onClick={() => {
                  setShowRainbowRedeemPopup(false);
                  setRainbowGameInfo(null);
                }} 
                className="w-full bg-gradient-to-r from-blue-600 to-orange-600 hover:from-blue-700 hover:to-orange-700 rounded-full"
              >
                ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
              </Button>
            </DialogFooter>
          </DialogContent>
        </Dialog>

        {/* Chicken Account Redemption Dialog */}
        <Dialog open={showChickenRedeemPopup} onOpenChange={setShowChickenRedeemPopup}>
          <DialogContent className="sm:max-w-md bg-white/95 backdrop-blur-xl border border-white/20 rounded-3xl">
            <DialogHeader>
              <DialogTitle className="text-orange-600 text-xl">üêî ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</DialogTitle>
              <DialogDescription className="text-gray-600">
                ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏Å‡∏°‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡∏Å‡∏£‡∏±‡∏ö
              </DialogDescription>
            </DialogHeader>
            
            {validatedChickenAccount && (
              <div className="space-y-4">
                <div className="p-4 border rounded-lg bg-orange-50">
                  <div className="space-y-3">
                    <div>
                      <Label className="text-sm font-medium text-gray-700">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:</Label>
                      <div className="bg-white p-2 rounded-2xl border font-mono text-sm mt-1">
                        {validatedChickenAccount.username || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}
                      </div>
                    </div>
                    <div>
                      <Label className="text-sm font-medium text-gray-700">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô:</Label>
                      <div className="bg-white p-2 rounded-2xl border font-mono text-sm mt-1">
                        {validatedChickenAccount.password || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}
                      </div>
                    </div>
                    {validatedChickenAccount.notes && (
                      <div>
                        <Label className="text-sm font-medium text-gray-700">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</Label>
                        <div className="bg-white p-2 rounded-2xl border text-sm mt-1">
                          {validatedChickenAccount.notes}
                        </div>
                      </div>
                    )}
                  </div>
                </div>
                
                <div className="bg-yellow-50 border border-yellow-200 rounded-2xl p-3">
                  <p className="text-yellow-800 text-xs">
                    <strong>‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:</strong> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
                  </p>
                </div>
              </div>
            )}
            
            <DialogFooter className="mt-4">
              <Button 
                onClick={() => {
                  setShowChickenRedeemPopup(false);
                  setValidatedChickenAccount(null);
                  setChickenRedeemCode('');
                }} 
                className="w-full bg-gradient-to-r from-orange-600 to-yellow-600 hover:from-orange-700 hover:to-yellow-700 rounded-full"
              >
                üêî ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
              </Button>
            </DialogFooter>
          </DialogContent>
        </Dialog>

        {/* Roblox Preparation Guide Dialog */}
        <Dialog open={showRobloxGuide} onOpenChange={setShowRobloxGuide}>
          <DialogContent className="sm:max-w-4xl max-h-[90vh] overflow-y-auto bg-gradient-to-br from-blue-50/95 to-purple-50/95 backdrop-blur-xl border border-white/30 shadow-2xl rounded-2xl sm:rounded-3xl">
            <DialogHeader className="text-center pb-4 sm:pb-6">
              <div className="relative mb-3 sm:mb-4">
                <div className="absolute inset-0 bg-gradient-to-r from-blue-400/30 to-purple-400/30 rounded-full blur-2xl"></div>
                <div className="relative bg-gradient-to-r from-blue-500 to-purple-500 rounded-full w-12 h-12 sm:w-16 sm:h-16 mx-auto flex items-center justify-center shadow-lg border-2 border-white/20">
                  <span className="text-xl sm:text-2xl">üõ°Ô∏è</span>
                </div>
              </div>
              
              <DialogTitle className="text-lg sm:text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Roblox ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏ï‡∏¥‡∏° Robux
              </DialogTitle>
              <DialogDescription className="text-gray-600 text-sm sm:text-base mt-2">
                ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ï‡∏¥‡∏î OTP/‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÄ‡∏Å‡πà‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏´‡πâ‡∏£‡πâ‡∏≤‡∏ô
              </DialogDescription>
            </DialogHeader>
            
            <div className="space-y-4 sm:space-y-6">
              {/* Step 1 - Clickable */}
              <div className="bg-white/80 backdrop-blur-sm rounded-xl sm:rounded-2xl p-4 sm:p-6 border border-white/20 cursor-pointer hover:bg-white/90 transition-all duration-200" onClick={() => handleStepClick(1)}>
                <h3 className="text-lg sm:text-xl font-bold text-blue-600 mb-3 sm:mb-4 flex items-center gap-2">
                  <span className="bg-blue-100 text-blue-600 rounded-full w-6 h-6 sm:w-8 sm:h-8 flex items-center justify-center text-xs sm:text-sm font-bold">1</span>
                  ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
                </h3>
                <div className="space-y-2 sm:space-y-3 text-gray-700 text-sm sm:text-base">
                  <p>1. ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö roblox.com ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏≠‡∏õ Roblox</p>
                  <p>2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Settings ‚Üí Account Info</p>
                  <p>3. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Change Password</p>
                  <p>4. ‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏î‡∏¥‡∏° ‚Üí ‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà ‚Üí ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà ‚Üí Save</p>
                  <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-2 sm:p-3 mt-2 sm:mt-3">
                    <p className="text-yellow-800 text-xs sm:text-sm">
                      üí° ‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏à‡∏≥‡∏á‡πà‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏≤‡∏¢‡∏≤‡∏Å (‡∏ú‡∏™‡∏°‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡∏ç‡πà‚Äì‡πÄ‡∏•‡πá‡∏Å‚Äì‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç)
                    </p>
                  </div>
                  <div className="mt-3 flex items-center justify-between">
                    <span className="text-blue-600 text-sm font-medium">üëÜ ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</span>
                    <div className="flex items-center gap-2">
                      <Checkbox 
                        id="step1-checkbox"
                        checked={step1Completed}
                        onCheckedChange={(checked) => setStep1Completed(checked as boolean)}
                        className="data-[state=checked]:bg-green-600 data-[state=checked]:border-green-600"
                      />
                      <label htmlFor="step1-checkbox" className="text-sm font-medium text-green-600 cursor-pointer">
                        ‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
                      </label>
                    </div>
                  </div>
                </div>
              </div>

              {/* Step 2 - Clickable */}
              <div className="bg-white/80 backdrop-blur-sm rounded-xl sm:rounded-2xl p-4 sm:p-6 border border-white/20 cursor-pointer hover:bg-white/90 transition-all duration-200" onClick={() => handleStepClick(2)}>
                <h3 className="text-lg sm:text-xl font-bold text-blue-600 mb-3 sm:mb-4 flex items-center gap-2">
                  <span className="bg-blue-100 text-blue-600 rounded-full w-6 h-6 sm:w-8 sm:h-8 flex items-center justify-center text-xs sm:text-sm font-bold">2</span>
                  ‡∏ó‡∏≥‡πÉ‡∏´‡πâ "‡πÄ‡∏°‡∏•‡πÅ‡∏î‡∏á" (Unverified Email)
                </h3>
                <div className="space-y-2 sm:space-y-3 text-gray-700 text-sm sm:text-base">
                  <p>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á:</p>
                  <ul className="list-disc list-inside space-y-1 ml-4">
                    <li>‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏±‡πà‡∏ß ‡πÜ ‡πÑ‡∏õ (‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á) ‚Üí ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏î‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</li>
                    <li>‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ‚Üí ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πá‡∏à‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏î‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô</li>
                  </ul>
                  <div className="bg-green-50 border border-green-200 rounded-lg p-2 sm:p-3 mt-2 sm:mt-3">
                    <p className="text-green-800 text-xs sm:text-sm">
                      ‚úÖ ‡∏à‡∏∏‡∏î‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ñ‡πâ‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏î‡∏á = ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏î‡πâ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô ‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î OTP ‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
                    </p>
                  </div>
                  <div className="mt-3 flex items-center justify-between">
                    <span className="text-blue-600 text-sm font-medium">üëÜ ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</span>
                    <div className="flex items-center gap-2">
                      <Checkbox 
                        id="step2-checkbox"
                        checked={step2Completed}
                        onCheckedChange={(checked) => setStep2Completed(checked as boolean)}
                        className="data-[state=checked]:bg-green-600 data-[state=checked]:border-green-600"
                      />
                      <label htmlFor="step2-checkbox" className="text-sm font-medium text-green-600 cursor-pointer">
                        ‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
                      </label>
                    </div>
                  </div>
                </div>
              </div>

              {/* Step 3 */}
              <div className="bg-white/80 backdrop-blur-sm rounded-xl sm:rounded-2xl p-4 sm:p-6 border border-white/20">
                <h3 className="text-lg sm:text-xl font-bold text-blue-600 mb-3 sm:mb-4 flex items-center gap-2">
                  <span className="bg-blue-100 text-blue-600 rounded-full w-6 h-6 sm:w-8 sm:h-8 flex items-center justify-center text-xs sm:text-sm font-bold">3</span>
                  ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏™‡∏≠‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô (2-Step Verification)
                </h3>
                <div className="space-y-2 sm:space-y-3 text-gray-700 text-sm sm:text-base">
                  <p>1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Settings ‚Üí Security</p>
                  <p>2. ‡∏õ‡∏¥‡∏î 2-Step Verification ‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á (Email/Authenticator/Phone)</p>
                </div>
              </div>

              {/* Step 4 */}
              <div className="bg-white/80 backdrop-blur-sm rounded-xl sm:rounded-2xl p-4 sm:p-6 border border-white/20">
                <h3 className="text-lg sm:text-xl font-bold text-blue-600 mb-3 sm:mb-4 flex items-center gap-2">
                  <span className="bg-blue-100 text-blue-600 rounded-full w-6 h-6 sm:w-8 sm:h-8 flex items-center justify-center text-xs sm:text-sm font-bold">4</span>
                  ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô
                </h3>
                <div className="space-y-2 sm:space-y-3 text-gray-700 text-sm sm:text-base">
                  <p>‚Ä¢ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Settings ‚Üí Security</p>
                  <p>‚Ä¢ ‡∏Å‡∏î Log out of All Other Sessions</p>
                </div>
              </div>

              {/* Step 5 */}
              <div className="bg-white/80 backdrop-blur-sm rounded-xl sm:rounded-2xl p-4 sm:p-6 border border-white/20">
                <h3 className="text-lg sm:text-xl font-bold text-blue-600 mb-3 sm:mb-4 flex items-center gap-2">
                  <span className="bg-blue-100 text-blue-600 rounded-full w-6 h-6 sm:w-8 sm:h-8 flex items-center justify-center text-xs sm:text-sm font-bold">5</span>
                  ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà
                </h3>
                <div className="space-y-2 sm:space-y-3 text-gray-700 text-sm sm:text-base">
                  <p>‚Ä¢ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô</p>
                  <p>‚Ä¢ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ = ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á‡∏£‡πâ‡∏≤‡∏ô</p>
                </div>
              </div>

              {/* Summary */}
              <div className="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-xl sm:rounded-2xl p-4 sm:p-6">
                <h3 className="text-lg sm:text-xl font-bold text-green-600 mb-3 sm:mb-4 flex items-center gap-2">
                  <span className="text-xl sm:text-2xl">üìã</span>
                  ‡∏™‡∏£‡∏∏‡∏õ
                </h3>
                <div className="grid grid-cols-2 gap-2 text-green-700 text-sm sm:text-base">
                  <p>‚Ä¢ ‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà</p>
                  <p>‚Ä¢ ‡πÄ‡∏°‡∏•‡πÅ‡∏î‡∏á</p>
                  <p>‚Ä¢ ‡∏õ‡∏¥‡∏î 2-Step</p>
                  <p>‚Ä¢ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô</p>
                </div>
              </div>

              {/* After completion */}
              <div className="bg-gradient-to-r from-orange-50 to-yellow-50 border border-orange-200 rounded-xl sm:rounded-2xl p-4 sm:p-6">
                <h3 className="text-lg sm:text-xl font-bold text-orange-600 mb-3 sm:mb-4 flex items-center gap-2">
                  <span className="text-xl sm:text-2xl">‚ö†Ô∏è</span>
                  ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ß‡∏£
                </h3>
                <div className="space-y-2 text-orange-700 text-sm sm:text-base">
                  <p>‚Ä¢ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
                  <p>‚Ä¢ ‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ</p>
                  <p>‚Ä¢ ‡πÄ‡∏õ‡∏¥‡∏î 2-Step Verification ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</p>
                </div>
              </div>
            </div>
            
            <DialogFooter className="pt-4 sm:pt-6">
              <div className="w-full space-y-4">
                {/* Progress indicator */}
                <div className="flex items-center justify-center gap-4 text-sm">
                  <div className={`flex items-center gap-2 ${step1Completed ? 'text-green-600' : 'text-gray-400'}`}>
                    <span className={`w-4 h-4 rounded-full flex items-center justify-center text-xs ${step1Completed ? 'bg-green-600 text-white' : 'bg-gray-300'}`}>
                      {step1Completed ? '‚úì' : '1'}
                    </span>
                    <span>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1</span>
                  </div>
                  <div className={`flex items-center gap-2 ${step2Completed ? 'text-green-600' : 'text-gray-400'}`}>
                    <span className={`w-4 h-4 rounded-full flex items-center justify-center text-xs ${step2Completed ? 'bg-green-600 text-white' : 'bg-gray-300'}`}>
                      {step2Completed ? '‚úì' : '2'}
                    </span>
                    <span>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2</span>
                  </div>
                </div>

                {/* All steps read confirmation */}
                {step1Completed && step2Completed && (
                  <div className="flex items-center justify-center gap-3 p-3 bg-green-50 border border-green-200 rounded-lg">
                    <Checkbox 
                      id="all-steps-read"
                      checked={allStepsRead}
                      onCheckedChange={(checked) => setAllStepsRead(checked as boolean)}
                      className="data-[state=checked]:bg-green-600 data-[state=checked]:border-green-600"
                    />
                    <label htmlFor="all-steps-read" className="text-sm font-medium text-green-700 cursor-pointer">
                      ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
                    </label>
                  </div>
                )}
                
                <Button 
                  onClick={handleGuideRead}
                  disabled={!step1Completed || !step2Completed || !allStepsRead}
                  className={`w-full h-12 sm:h-14 text-base sm:text-lg font-semibold shadow-lg transition-all transform hover:scale-105 rounded-full ${
                    step1Completed && step2Completed && allStepsRead
                      ? 'bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700' 
                      : 'bg-gray-400 cursor-not-allowed'
                  }`}
                >
                  <div className="flex items-center gap-2 sm:gap-3">
                    <span className="text-lg sm:text-xl">‚úÖ</span>
                    <span>
                      {step1Completed && step2Completed && allStepsRead
                        ? '‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß' 
                        : step1Completed && step2Completed
                        ? '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß'
                        : '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1 ‡πÅ‡∏•‡∏∞ 2 ‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô'
                      }
                    </span>
                  </div>
                </Button>
              </div>
            </DialogFooter>
          </DialogContent>
        </Dialog>

        {/* Step Detail Dialog */}
        <Dialog open={showStepDialog} onOpenChange={setShowStepDialog}>
          <DialogContent className="sm:max-w-2xl max-h-[90vh] overflow-y-auto bg-gradient-to-br from-blue-50/95 to-purple-50/95 backdrop-blur-xl border border-white/30 shadow-2xl rounded-2xl sm:rounded-3xl">
            <DialogHeader className="text-center pb-4 sm:pb-6">
              <div className="relative mb-3 sm:mb-4">
                <div className="absolute inset-0 bg-gradient-to-r from-blue-400/30 to-purple-400/30 rounded-full blur-2xl"></div>
                <div className="relative bg-gradient-to-r from-blue-500 to-purple-500 rounded-full w-12 h-12 sm:w-16 sm:h-16 mx-auto flex items-center justify-center shadow-lg border-2 border-white/20">
                  <span className="text-xl sm:text-2xl">üìã</span>
                </div>
              </div>
              
              <DialogTitle className="text-lg sm:text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                {currentStep === 1 ? '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà' : '‡∏ó‡∏≥‡πÉ‡∏´‡πâ "‡πÄ‡∏°‡∏•‡πÅ‡∏î‡∏á" (Unverified Email)'}
              </DialogTitle>
              <DialogDescription className="text-gray-600 text-sm sm:text-base mt-2">
                {currentStep === 1 ? '‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô Roblox ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì' : '‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏î‡∏á (‡πÑ‡∏°‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô)'}
              </DialogDescription>
            </DialogHeader>
            
            <div className="space-y-4 sm:space-y-6">
              {currentStep === 1 ? (
                /* Step 1 Detail */
                <div className="bg-white/80 backdrop-blur-sm rounded-xl sm:rounded-2xl p-4 sm:p-6 border border-white/20">
                  <h3 className="text-lg sm:text-xl font-bold text-blue-600 mb-3 sm:mb-4 flex items-center gap-2">
                    <span className="bg-blue-100 text-blue-600 rounded-full w-6 h-6 sm:w-8 sm:h-8 flex items-center justify-center text-xs sm:text-sm font-bold">1</span>
                    ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
                  </h3>
                  <div className="space-y-3 sm:space-y-4 text-gray-700 text-sm sm:text-base">
                    <div className="bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4">
                      <h4 className="font-semibold text-blue-800 mb-2">‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h4>
                      <p>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö roblox.com ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏≠‡∏õ Roblox ‡∏î‡πâ‡∏ß‡∏¢‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>
                    </div>
                    
                    <div className="bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4">
                      <h4 className="font-semibold text-blue-800 mb-2">‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Settings</h4>
                      <p>‡πÑ‡∏õ‡∏ó‡∏µ‡πà Settings ‚Üí Account Info</p>
                    </div>
                    
                    <div className="bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4">
                      <h4 className="font-semibold text-blue-800 mb-2">‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Change Password</h4>
                      <p>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Change Password</p>
                    </div>
                    
                    <div className="bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4">
                      <h4 className="font-semibold text-blue-800 mb-2">‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</h4>
                      <p>‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏î‡∏¥‡∏° ‚Üí ‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà ‚Üí ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà ‚Üí Save</p>
                    </div>
                    
                    <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3 sm:p-4">
                      <h4 className="font-semibold text-yellow-800 mb-2 flex items-center gap-2">
                        <span>üí°</span>
                        ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö
                      </h4>
                      <p className="text-yellow-800">
                        ‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏à‡∏≥‡∏á‡πà‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏≤‡∏¢‡∏≤‡∏Å (‡∏ú‡∏™‡∏°‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡∏ç‡πà‚Äì‡πÄ‡∏•‡πá‡∏Å‚Äì‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç)
                      </p>
                    </div>
                  </div>
                </div>
              ) : (
                /* Step 2 Detail */
                <div className="bg-white/80 backdrop-blur-sm rounded-xl sm:rounded-2xl p-4 sm:p-6 border border-white/20">
                  <h3 className="text-lg sm:text-xl font-bold text-blue-600 mb-3 sm:mb-4 flex items-center gap-2">
                    <span className="bg-blue-100 text-blue-600 rounded-full w-6 h-6 sm:w-8 sm:h-8 flex items-center justify-center text-xs sm:text-sm font-bold">2</span>
                    ‡∏ó‡∏≥‡πÉ‡∏´‡πâ "‡πÄ‡∏°‡∏•‡πÅ‡∏î‡∏á" (Unverified Email)
                  </h3>
                  <div className="space-y-3 sm:space-y-4 text-gray-700 text-sm sm:text-base">
                    <div className="bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4">
                      <h4 className="font-semibold text-blue-800 mb-2">‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</h4>
                      <p>‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏±‡πà‡∏ß ‡πÜ ‡πÑ‡∏õ (‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á) ‚Üí ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏î‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</p>
                    </div>
                    
                    <div className="bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4">
                      <h4 className="font-semibold text-blue-800 mb-2">‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏´‡∏°‡πà</h4>
                      <p>‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ‚Üí ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πá‡∏à‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏î‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô</p>
                    </div>
                    
                    <div className="bg-green-50 border border-green-200 rounded-lg p-3 sm:p-4">
                      <h4 className="font-semibold text-green-800 mb-2 flex items-center gap-2">
                        <span>‚úÖ</span>
                        ‡∏à‡∏∏‡∏î‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
                      </h4>
                      <p className="text-green-800">
                        ‡∏ñ‡πâ‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏î‡∏á = ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏î‡πâ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô ‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î OTP ‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
                      </p>
                    </div>
                  </div>
                </div>
              )}
            </div>
            
            <DialogFooter className="pt-4 sm:pt-6">
              <Button 
                onClick={handleStepDialogClose}
                className="w-full h-12 sm:h-14 text-base sm:text-lg font-semibold bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 shadow-lg transition-all transform hover:scale-105 rounded-full"
              >
                <div className="flex items-center gap-2 sm:gap-3">
                  <span className="text-lg sm:text-xl">‚úÖ</span>
                  <span>‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡πâ‡∏ß</span>
                </div>
              </Button>
            </DialogFooter>
          </DialogContent>
        </Dialog>

        {/* Robux Redemption Dialog */}
        <Dialog open={showRedeemPopup} onOpenChange={setShowRedeemPopup}>
          <DialogContent className="sm:max-w-lg bg-gradient-to-br from-white/95 to-white/90 backdrop-blur-xl border border-white/30 shadow-2xl rounded-3xl">
            <DialogHeader className="text-center pb-6">
              <div className="relative mb-4">
                {/* Glowing Background */}
                <div className="absolute inset-0 bg-gradient-to-r from-green-400/30 to-emerald-400/30 rounded-full blur-2xl"></div>
                <div className="relative bg-gradient-to-r from-green-500 to-emerald-500 rounded-full w-16 h-16 mx-auto flex items-center justify-center shadow-lg border-2 border-white/20">
                  <span className="text-2xl">üíé</span>
                </div>
              </div>
              
              <DialogTitle className="text-2xl font-bold bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent">
                ‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏£‡∏±‡∏ö Robux
              </DialogTitle>
              <DialogDescription className="text-gray-600 text-base mt-2">
                ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Roblox ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö <span className="font-bold text-green-600">{validatedCode?.robux_value} Robux</span>
              </DialogDescription>
            </DialogHeader>
            
            <form onSubmit={handleRobuxSubmit} className="space-y-6">
              <div className="space-y-4">
                <div>
                  <Label htmlFor="username" className="text-gray-700 font-semibold flex items-center gap-2 mb-2">
                    <span className="text-green-600">üë§</span>
                    ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ Roblox
                  </Label>
                  <Input
                    id="username"
                    value={redeemForm.username}
                    onChange={(e) => setRedeemForm(prev => ({ ...prev, username: e.target.value }))}
                    placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô Roblox"
                    className="h-12 border-2 border-gray-200 focus:border-green-400 focus:ring-2 focus:ring-green-400/20 transition-all rounded-2xl"
                  />
                </div>
                
                <div>
                  <Label htmlFor="password" className="text-gray-700 font-semibold flex items-center gap-2 mb-2">
                    <span className="text-green-600">üîí</span>
                    ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô Roblox
                  </Label>
                  <Input
                    id="password"
                    type="password"
                    value={redeemForm.password}
                    onChange={(e) => setRedeemForm(prev => ({ ...prev, password: e.target.value }))}
                    placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
                    className="h-12 border-2 border-gray-200 focus:border-green-400 focus:ring-2 focus:ring-green-400/20 transition-all rounded-2xl"
                  />
                </div>
                
                <div>
                  <Label htmlFor="contact" className="text-gray-700 font-semibold flex items-center gap-2 mb-2">
                    <span className="text-green-600">üì±</span>
                    ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå
                  </Label>
                  <Input
                    id="contact"
                    value={redeemForm.contact}
                    onChange={(e) => setRedeemForm(prev => ({ ...prev, contact: e.target.value }))}
                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå (‡πÄ‡∏ä‡πà‡∏ô 08X-XXX-XXXX)"
                    className="h-12 border-2 border-gray-200 focus:border-green-400 focus:ring-2 focus:ring-green-400/20 transition-all rounded-2xl"
                  />
                </div>
              </div>
              
              {/* Info Box */}
              <div className="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-2xl p-4">
                <div className="flex items-start gap-3">
                  <div className="text-green-600 text-lg">üí°</div>
                  <div>
                    <h4 className="text-green-800 font-semibold mb-1">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</h4>
                    <p className="text-green-700 text-sm">
                      ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡πà‡∏á Robux ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Roblox ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
                    </p>
                  </div>
                </div>
              </div>
              
              <DialogFooter className="pt-4">
                <Button 
                  type="submit"
                  disabled={isRobuxButtonSubmitting}
                  className="w-full h-14 text-lg font-semibold bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 shadow-lg transition-all transform hover:scale-105 rounded-full"
                >
                  {isRobuxButtonSubmitting ? (
                    <div className="flex items-center gap-3">
                      <div className="w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin"></div>
                      <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏Å...</span>
                    </div>
                  ) : (
                    <div className="flex items-center gap-3">
                      <span className="text-xl">üíé</span>
                      <span>‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î</span>
                    </div>
                  )}
                </Button>
              </DialogFooter>
            </form>
          </DialogContent>
        </Dialog>

        {/* Shop Promotion Section */}
        <div className="mt-8 text-center">
          <div className="bg-gradient-to-r from-orange-500/20 to-yellow-500/20 backdrop-blur-xl rounded-3xl p-6 border border-orange-400/30">
            <h3 className="text-xl font-bold text-white mb-3">üõí ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°?</h3>
            <p className="text-orange-200 mb-4">
              ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏ï‡∏¥‡∏°‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ‡∏´‡∏£‡∏∑‡∏≠‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô‡∏ñ‡∏π‡∏Å‡πÜ ‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡πá‡∏ö
            </p>
            <Button 
              onClick={() => window.open('https://lemonshop.rdcw.xyz/', '_blank')}
              className="bg-gradient-to-r from-orange-600 to-yellow-600 hover:from-orange-700 hover:to-yellow-700 text-white px-6 py-3 rounded-full shadow-lg transition-all transform hover:scale-105"
            >
              üõí ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
            </Button>
          </div>
        </div>

        {/* Video Tutorial Section */}
        <div className="mt-8 mb-8 max-w-3xl mx-auto">
          <Card className="bg-gradient-to-r from-red-500/20 to-pink-500/20 backdrop-blur-xl border-red-400/30 rounded-3xl overflow-hidden">
            <CardHeader className="text-center pb-3">
              <CardTitle className="text-xl text-white flex items-center justify-center gap-2">
                <span>üìπ</span>
                <span>‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏™‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</span>
              </CardTitle>
              <p className="text-red-100 text-sm">
                ‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ò‡∏µ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
              </p>
            </CardHeader>
            <CardContent className="p-4 pt-0">
              <div className="relative w-full" style={{ paddingBottom: '42%' }}>
                <iframe
                  className="absolute top-0 left-0 w-full h-full rounded-xl shadow-lg"
                  src="https://www.youtube.com/embed/MTK518hacII"
                  title="‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏™‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ Lemon Shop"
                  frameBorder="0"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowFullScreen
                ></iframe>
              </div>
              <div className="mt-3 text-center">
                <Button 
                  onClick={() => window.open('https://youtu.be/MTK518hacII', '_blank')}
                  className="bg-red-600/80 hover:bg-red-700 text-white px-4 py-2 rounded-full text-xs transition-all"
                >
                  <svg className="w-4 h-4 mr-1 inline" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"/>
                  </svg>
                  ‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡∏π‡∏ö‡∏ô YouTube
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Articles Section */}
        <div className="mt-8 mb-8">
          <div className="text-center mb-6">
            <h2 className="text-2xl md:text-3xl font-bold text-white mb-2 flex items-center justify-center gap-2">
              <span>üìö</span>
              <span>‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</span>
            </h2>
            <p className="text-purple-200 text-sm">‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û</p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {/* Article 1 */}
            <Card className="bg-white/10 backdrop-blur-xl border-white/20 hover:bg-white/15 transition-all cursor-pointer rounded-3xl overflow-hidden group">
              <CardContent className="p-6">
                <div className="text-4xl mb-4 text-center">üéÆ</div>
                <h3 className="text-lg font-bold text-white mb-3 group-hover:text-purple-300 transition-colors">
                  ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Roblox ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ö Robux
                </h3>
                <p className="text-purple-200 text-sm leading-relaxed mb-4">
                  ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Roblox ‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö Robux ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ï‡∏¥‡∏î OTP ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô
                </p>
                <div className="space-y-2 text-xs text-purple-300">
                  <p>‚úì ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</p>
                  <p>‚úì ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏î‡∏á</p>
                  <p>‚úì ‡∏õ‡∏¥‡∏î 2-Step Verification</p>
                  <p>‚úì ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô</p>
                </div>
              </CardContent>
            </Card>

            {/* Article 2 */}
            <Card className="bg-white/10 backdrop-blur-xl border-white/20 hover:bg-white/15 transition-all cursor-pointer rounded-3xl overflow-hidden group">
              <CardContent className="p-6">
                <div className="text-4xl mb-4 text-center">‚è±Ô∏è</div>
                <h3 className="text-lg font-bold text-white mb-3 group-hover:text-purple-300 transition-colors">
                  ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                </h3>
                <p className="text-purple-200 text-sm leading-relaxed mb-4">
                  ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
                </p>
                <div className="space-y-2 text-xs text-purple-300">
                  <p>üéÆ Robux: 5 ‡∏ô‡∏≤‡∏ó‡∏µ - 3 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</p>
                  <p>üêî ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÑ‡∏Å‡πà‡∏ï‡∏±‡∏ô: ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</p>
                  <p>üåà Rainbow Six: 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</p>
                  <p>üì± ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß</p>
                </div>
              </CardContent>
            </Card>

            {/* Article 3 */}
            <Card className="bg-white/10 backdrop-blur-xl border-white/20 hover:bg-white/15 transition-all cursor-pointer rounded-3xl overflow-hidden group">
              <CardContent className="p-6">
                <div className="text-4xl mb-4 text-center">üîê</div>
                <h3 className="text-lg font-bold text-white mb-3 group-hover:text-purple-300 transition-colors">
                  ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏ö‡∏±‡∏ç‡∏ä‡∏µ
                </h3>
                <p className="text-purple-200 text-sm leading-relaxed mb-4">
                  ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß
                </p>
                <div className="space-y-2 text-xs text-purple-300">
                  <p>‚úì ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏î‡πâ Robux</p>
                  <p>‚úì ‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ</p>
                  <p>‚úì ‡πÄ‡∏õ‡∏¥‡∏î 2-Step Verification</p>
                  <p>‚úì ‡∏≠‡∏¢‡πà‡∏≤‡πÅ‡∏ä‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô</p>
                </div>
              </CardContent>
            </Card>

            {/* Article 4 */}
            <Card className="bg-white/10 backdrop-blur-xl border-white/20 hover:bg-white/15 transition-all cursor-pointer rounded-3xl overflow-hidden group">
              <CardContent className="p-6">
                <div className="text-4xl mb-4 text-center">‚ùì</div>
                <h3 className="text-lg font-bold text-white mb-3 group-hover:text-purple-300 transition-colors">
                  ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢
                </h3>
                <p className="text-purple-200 text-sm leading-relaxed mb-4">
                  ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
                </p>
                <div className="space-y-3 text-xs text-purple-300">
                  <div className="bg-white/5 p-3 rounded-lg">
                    <p className="font-semibold text-yellow-300 mb-1">üí° ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</p>
                    <p className="ml-4 leading-relaxed">
                      <span className="block">‚Ä¢ ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠</span>
                      <span className="block">‚Ä¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</span>
                      <span className="block">‚Ä¢ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î‡∏ú‡∏¥‡∏î/‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ú‡∏¥‡∏î</span>
                      <span className="block text-green-300 mt-1">‚Üí ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå: mixzis</span>
                    </p>
                  </div>
                  <div className="bg-white/5 p-3 rounded-lg">
                    <p className="font-semibold text-red-300 mb-1">üí° ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß</p>
                    <p className="ml-4 leading-relaxed">
                      ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ
                    </p>
                  </div>
                  <div className="bg-white/5 p-3 rounded-lg">
                    <p className="font-semibold text-orange-300 mb-1">üí° ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô</p>
                    <p className="ml-4 leading-relaxed">
                      ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Roblox ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Article 5 */}
            <Card className="bg-white/10 backdrop-blur-xl border-white/20 hover:bg-white/15 transition-all cursor-pointer rounded-3xl overflow-hidden group">
              <CardContent className="p-6">
                <div className="text-4xl mb-4 text-center">üìã</div>
                <h3 className="text-lg font-bold text-white mb-3 group-hover:text-purple-300 transition-colors">
                  ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                </h3>
                <p className="text-purple-200 text-sm leading-relaxed mb-4">
                  ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
                </p>
                <div className="space-y-2 text-xs text-purple-300">
                  <p>‚úì ‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß‡πÉ‡∏´‡πâ‡∏î‡∏µ</p>
                  <p>‚úì ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏∏‡∏Å 10-15 ‡∏ô‡∏≤‡∏ó‡∏µ</p>
                  <p>‚úì ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤ "‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß"</p>
                  <p>‚úì ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤</p>
                </div>
              </CardContent>
            </Card>

            {/* Article 6 */}
            <Card className="bg-white/10 backdrop-blur-xl border-white/20 hover:bg-white/15 transition-all cursor-pointer rounded-3xl overflow-hidden group">
              <CardContent className="p-6">
                <div className="text-4xl mb-4 text-center">‚≠ê</div>
                <h3 className="text-lg font-bold text-white mb-3 group-hover:text-purple-300 transition-colors">
                  ‡∏ó‡∏≥‡πÑ‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                </h3>
                <p className="text-purple-200 text-sm leading-relaxed mb-4">
                  ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß
                </p>
                <div className="space-y-2 text-xs text-purple-300">
                  <p>‚≠ê ‡∏ä‡πà‡∏ß‡∏¢‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô</p>
                  <p>‚≠ê ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà</p>
                  <p>‚≠ê ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ö‡∏ô Facebook Page</p>
                  <p>‚≠ê ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á 1 ‡∏ô‡∏≤‡∏ó‡∏µ</p>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

      </div>

      {/* Popup ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß */}
      <Dialog open={showQueueNumberPopup} onOpenChange={setShowQueueNumberPopup}>
        <DialogContent className="sm:max-w-md bg-gradient-to-br from-green-50 to-emerald-50 border-2 border-green-200">
          <DialogHeader>
            <DialogTitle className="text-xl font-bold text-green-800 text-center">
              üéâ ‡πÅ‡∏•‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!
            </DialogTitle>
            <DialogDescription className="text-center text-green-700 text-sm">
              ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            </DialogDescription>
          </DialogHeader>
          
          <div className="text-center py-3">
            <div className="text-6xl font-bold text-green-600 mb-3">
              #{currentQueueNumber}
            </div>
            <p className="text-green-700 mb-2 text-sm font-semibold">
              ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
            </p>
          </div>

          {/* ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç */}
          <div className="bg-gradient-to-r from-red-500 to-orange-500 text-white rounded-lg p-3 mb-3 shadow-lg">
            <div className="flex items-start gap-2">
              <div className="text-xl flex-shrink-0">‚ö†Ô∏è</div>
              <div className="space-y-1">
                <p className="font-bold text-sm">üì¢ ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡πà‡∏≤‡∏ô</p>
                <div className="text-xs space-y-1 bg-white/20 rounded p-2">
                  <p className="font-semibold">‚úã ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡πà‡∏≠‡∏ô!</p>
                  <p className="font-semibold">‚≠ê ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡πÉ‡∏´‡πâ 5 ‡∏î‡∏≤‡∏ß‡∏î‡πâ‡∏ß‡∏¢</p>
                </div>
              </div>
            </div>
          </div>

          {/* ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° */}
          <div className="bg-yellow-50 border border-yellow-300 rounded-lg p-3 mb-3">
            <div className="flex items-start gap-2 mb-1">
              <span className="text-lg">üîç</span>
              <h3 className="font-bold text-yellow-800 text-sm">‡∏ó‡∏≥‡πÑ‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏¥‡∏ß?</h3>
            </div>
            <div className="space-y-1 text-xs text-yellow-900 pl-6">
              <p>‚Ä¢ <span className="font-semibold">‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏≤‡∏à‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏°‡∏•</span> - ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∞‡πÑ‡∏î‡πâ Robux</p>
              <p>‚Ä¢ <span className="font-semibold">‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏≤‡∏à‡∏ï‡∏¥‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</span> - ‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå</p>
              <p>‚Ä¢ <span className="font-semibold">‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏≤‡∏à‡∏ú‡∏¥‡∏î</span> - ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡πÉ‡∏´‡∏°‡πà</p>
              <p>‚Ä¢ <span className="font-semibold">‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤</span> - ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</p>
            </div>
          </div>

          {/* ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ */}
          <div className="bg-blue-50 border border-blue-300 rounded-lg p-3 mb-3">
            <div className="flex items-start gap-2 mb-1">
              <span className="text-lg">üí°</span>
              <h3 className="font-bold text-blue-800 text-sm">‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥:</h3>
            </div>
            <div className="space-y-1 text-xs text-blue-900 pl-6">
              <p className="font-semibold">1Ô∏è‚É£ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß" ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á</p>
              <p className="font-semibold">2Ô∏è‚É£ ‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß #{currentQueueNumber} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</p>
              <p className="font-semibold">3Ô∏è‚É£ ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏∏‡∏Å 10-15 ‡∏ô‡∏≤‡∏ó‡∏µ</p>
              <p className="font-semibold">4Ô∏è‚É£ ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</p>
              <p className="font-semibold">5Ô∏è‚É£ ‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö Robux ‡πÅ‡∏•‡πâ‡∏ß ‡∏Ñ‡πà‡∏≠‡∏¢‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</p>
            </div>
          </div>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ */}
          <div className="space-y-2">
            <Button 
              onClick={() => {
                setShowQueueNumberPopup(false);
                window.open('/queue-status', '_blank');
              }}
              className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-bold py-3 text-sm shadow-lg"
            >
              üîç ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢
            </Button>
            
            <p className="text-center text-xs text-gray-600">
              üí¨ ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå: <span className="font-bold">mixzis</span>
            </p>
          </div>
          
          <DialogFooter className="mt-1">
            <Button 
              onClick={() => setShowQueueNumberPopup(false)}
              variant="outline"
              className="w-full border-gray-300 text-gray-700 hover:bg-gray-100 text-xs py-2"
            >
              ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á (‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ô‡∏∞!)
            </Button>
          </DialogFooter>
        </DialogContent>
      </Dialog>

      {/* Line QR Code Dialog */}
      <Dialog open={showLineQRPopup} onOpenChange={setShowLineQRPopup}>
        <DialogContent className="sm:max-w-md bg-white/95 backdrop-blur-xl border border-white/20 rounded-3xl">
          <DialogHeader className="text-center pb-4">
            <DialogTitle className="text-green-600 text-xl">üì± ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏•‡∏ô‡πå</DialogTitle>
            <DialogDescription className="text-gray-600">
              ‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ ID: mixzis
            </DialogDescription>
          </DialogHeader>
          
          <div className="text-center space-y-4">
            <div className="flex justify-center">
              <div className="bg-white p-4 rounded-2xl shadow-lg border-2 border-gray-100">
                <img 
                  src="https://img5.pic.in.th/file/secure-sv1/412b63bf382aa3c421169d12ac8941d7.jpg" 
                  alt="Line QR Code" 
                  className="w-48 h-48 mx-auto"
                />
              </div>
            </div>
            
            <div className="bg-blue-50 p-3 rounded-xl border border-blue-200">
              <p className="text-blue-800 text-sm font-medium">
                üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô:
              </p>
              <div className="text-blue-700 text-xs mt-1 space-y-1">
                <p>‚Ä¢ ‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡∏î‡πâ‡∏ß‡∏¢‡πÅ‡∏≠‡∏õ‡πÑ‡∏•‡∏ô‡πå</p>
                <p>‚Ä¢ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ID: <span className="font-bold">mixzis</span></p>
              </div>
            </div>
          </div>
          
          <DialogFooter className="pt-4">
            <Button 
              onClick={() => setShowLineQRPopup(false)} 
              className="w-full bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 rounded-full"
            >
              ‡∏õ‡∏¥‡∏î
            </Button>
          </DialogFooter>
        </DialogContent>
      </Dialog>

      {/* Advertisement Popup */}
      <Dialog open={showAdPopup} onOpenChange={setShowAdPopup}>
        <DialogContent className="sm:max-w-lg bg-white/95 backdrop-blur-xl border border-white/20 rounded-3xl p-0 overflow-hidden">
          <div className="relative">
            {/* Close Button */}
            <button
              onClick={handleCloseAdPopup}
              className="absolute top-4 right-4 z-10 w-8 h-8 bg-black/50 hover:bg-black/70 text-white rounded-full flex items-center justify-center transition-all"
            >
              ‚úï
            </button>
            
            {/* Ad Content */}
            {adData && (
              <div 
                className="cursor-pointer"
                onClick={handleAdClick}
              >
                <img 
                  src={adData.image_url} 
                  alt={adData.title}
                  className="w-full h-auto object-cover"
                />
                {adData.title && (
                  <div className="p-4 bg-gradient-to-r from-orange-500 to-yellow-500 text-white">
                    <h3 className="font-bold text-lg text-center">{adData.title}</h3>
                  </div>
                )}
              </div>
            )}
          </div>
        </DialogContent>
      </Dialog>
    </div>
  );
}


